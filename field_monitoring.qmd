# Field Monitoring of survivorship and height  

The survivorship and height measured from the experimental plots at Maryland, West Virginia and  Virginia. The following code details the analysis run to eliminate the replication/block effect and look at the variance in height data across sources. We also look into how each source differs from the mean of the total populations. 




## Survivorship   

***Data***     

```{r message=FALSE, warning=FALSE}
# packages
require(lmerTest)
require(dplyr)
require(tidyr)
require(DT)
require(multcomp)
require(sjPlot)
require(ggplot2)
```

```{r message=FALSE, warning=FALSE}
mort_data <- read.csv("./data/tnc_spring_2022.csv", header=TRUE, stringsAsFactors = T)
mort_data$Region <- factor(mort_data$Region, levels = c('Maryland', 'West_Virginia', 'Virginia'))
mort_data$Damage[is.na(mort_data$Height)] <- "Dead"
mort_data$Mortality[mort_data$Damage=="Dead"] <- 0
mort_data$Mortality[mort_data$Damage!="Dead"] <- 1

MD_mort_data <- mort_data[mort_data$Region == "Maryland",]
WV_mort_data <- mort_data[mort_data$Region == "West_Virginia",]
VA_mort_data <- mort_data[mort_data$Region == "Virginia",]
```

**Set up dummy data.frame**  
```{r}
# Initialize an empty data frame to store results
Source_Mortality <- NULL
Region_Mortality <- NULL

Region_Mortality <- data.frame(Region = character(),
                         Source = character(),
                         Vp = numeric(),
                         mean = numeric(),
                         H2 = numeric(),
                         Va = numeric(),
                         Mortality = numeric(),
                         stringsAsFactors = T)

Source_Mortality <- data.frame(Region = character(),
                         Source = character(),
                         Vp = numeric(),
                         mean = numeric(),
                         H2 = numeric(),
                         Va = numeric(),
                         Mortality = numeric(),
                         stringsAsFactors = T)

# Initialize an empty list to store models
model_list <- list()
```

::: {.callout-tip}  
### Model 'for loop'   

```{r}
# subset based on region
for (Region in unique(mort_data$Region)) {
  # subset based on region
    subset_data <- mort_data[mort_data$Region == Region,]
    # Remove unused levels from the Source factor
    subset_data$Source <- droplevels(subset_data$Source)
    
  # model
  model <- glmer(Mortality ~ 1+ Source +  (1|Replication), data = subset_data,family = 'binomial')
  

  # Store model results  
  model_name <- paste0(Region, "_mort_model")
  model_list[[model_name]] <- model      
}
```

:::  

```{r}
MD_mort_data$fit <- predict(model_list$Maryland_mort_model)
WV_mort_data$fit <- predict(model_list$West_Virginia_mort_model)
VA_mort_data$fit <- predict(model_list$Virginia_mort_model)

predict_dat <- rbind(MD_mort_data,WV_mort_data,VA_mort_data)
predict_dat$Region <- factor(predict_dat$Region, levels=c('Maryland', 'West_Virginia', 'Virginia'))
```


### Model summary (Region)    

#### Maryland 
:::{.panel-tabset}  
##### Summary 
```{r}
summary(model_list$Maryland_mort_model)
```

##### TukeyHSD
```{r class.source = 'fold-hide'}
ghlt_MD <- glht(model_list$Maryland_mort_model, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_MD)
```

##### Viz.
```{r message=FALSE, warning=FALSE}
MD_mort_plot <- sjPlot::plot_model(model_list$Maryland_mort_model, type="pred", axis.title = c("Sources","Predicted probablities of Survival"), title = "Maryland")

MD_mort_plot$Source +
  ylab("Predicted probablities of Survival") +
  scale_color_manual( values = c("#D73027","#1B9E77","#1F78B4"))+
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 
```
:::

#### West Virginia  
:::{.panel-tabset}  
##### Summary 
```{r}
summary(model_list$West_Virginia_mort_model)
```

##### TukeyHSD
```{r class.source = 'fold-hide'}
ghlt_WV <- glht(model_list$West_Virginia_mort_model, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_WV)
```

##### Viz.
```{r message=FALSE, warning=FALSE, class.source='fold-hide'}
WV_mort_plot <- sjPlot::plot_model(model_list$West_Virginia_mort_model, type="pred", axis.title = c("Sources","Predicted probablities of Survival"), title = "West Virginia")

WV_mort_plot$Source +
  ylab("Predicted probablities of Survival") +
  scale_color_manual( values = c("#D73027","#1B9E77","#1F78B4","#E78AC3"))+
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 

```
:::  

#### Virginia  
:::{.panel-tabset}  
##### Summary  
```{r class.source = 'fold-hide'}
summary(model_list$Virginia_mort_model)

```

##### TukeyHSD  
```{r class.source = 'fold-hide'}
ghlt_VA <- glht(model_list$Virginia_mort_model, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_VA)
```

##### Viz. 
```{r message=FALSE, warning=FALSE, class.source='fold-hide'}

VA_mort_plot <- sjPlot::plot_model(model_list$Virginia_mort_model, type="pred", axis.title = c("Sources","Predicted probablities of Survival"), title = "Virginia")

VA_mort_plot$Source +
  ylab("Predicted probablities of Survival") +
  scale_color_manual( values = c("#FFD92F","#FC8D59","#D73027","#1B9E77","#1F78B4"))+
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 


```
:::   


### Model summary (Sources)    
#### XDS    
:::{.panel-tabset}  
##### Summary
```{r class.source = 'fold-hide'}
# model
XDS_mort <- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %>% filter(Source == "XDS"),family = 'binomial')

summary(XDS_mort)
```

##### TukeyHSD  
```{r class.source = 'fold-hide'}
ghlt_XDS <- glht(XDS_mort, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_XDS)
```

##### Viz. 
```{r message=FALSE, warning=FALSE, class.source='fold-hide'}

XDS_mort_plot <- sjPlot::plot_model(XDS_mort, type="pred", axis.title = c("Region","Predicted probablities of Survival"), title = "XDS")

XDS_mort_plot$Region +
  ylab("Predicted probablities of Survival") +
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 


```
:::  

#### XPK   
:::{.panel-tabset}  
##### Summary
```{r class.source = 'fold-hide'}
# model
XPK_mort <- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %>% filter(Source == "XPK"),family = 'binomial')

summary(XPK_mort)
```

##### TukeyHSD  
```{r class.source = 'fold-hide'}
ghlt_XPK <- glht(XPK_mort, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_XPK)
```

##### Viz. 
```{r message=FALSE, warning=FALSE, class.source='fold-hide'}

XPK_mort_plot <- sjPlot::plot_model(XPK_mort, type="pred", axis.title = c("Region","Predicted probablities of Survival"), title = "XPK")

XPK_mort_plot$Region +
  ylab("Predicted probablities of Survival") +
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 


```
:::  


#### XCS   
:::{.panel-tabset}  
##### Summary
```{r message=FALSE, warning=FALSE, class.source='fold-hide'}
# model
XCS_mort <- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %>% filter(Source == "XCS"),family = 'binomial')

summary(XCS_mort)
```

##### TukeyHSD  
```{r class.source = 'fold-hide'}
ghlt_XCS <- glht(XCS_mort, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_XCS)
```

##### Viz. 
```{r class.source = 'fold-hide'}

XCS_mort_plot <- sjPlot::plot_model(XCS_mort, type="pred", axis.title = c("Region","Predicted probablities of Survival"), title = "XCS")

XCS_mort_plot$Region +
  ylab("Predicted probablities of Survival") +
      theme_bw() +  
  theme(axis.text=element_text(size=15, face = "bold"), 
        axis.title=element_text(size=15, face = "bold"),
        plot.title = element_text(size=15, face = "bold"),
        legend.position = "right",
        plot.background = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.background = element_blank(),
        plot.margin = unit(c(1,1,1,1), "cm"),
        strip.text.x = element_text(size = 15, colour = "black", face = "bold")) 


```
:::  

## Height after one year of planting  

### Data  
```{r}
# data
data <- read.csv("./data/tnc_spring_2022.csv", header=TRUE)
plot_cor <- read.csv("./data/plot_coordinates.csv", header=TRUE)

# add coordinates 
data <- merge(data,plot_cor[,c("Replication","POINT_X","POINT_Y")])

# Create code for cover type
data[grepl(x=data$Cover,"Goldenrods"),"CoverCode"] <- "GR"
data[data$Cover=="Goldenrods + Grassy vegetation","CoverCode"] <- "GRGV"
data[data$Cover=="Goldenrods + Open","CoverCode"] <- "GROP"
data[data$Cover=="Goldenrods + Shrubs","CoverCode"] <- "GRSH"
data[data$Cover=="Goldenrods + Wet","CoverCode"] <- "GRWT"
data[data$Cover=="Grassy vegetation","CoverCode"] <- "GV"
data[data$Cover=="Grassy Vegetation + Open","CoverCode"] <- "GVOP"
data[data$Cover=="Grassy vegetation + Wet","CoverCode"] <- "GVWT"
data[data$Cover=="Tree cover","CoverCode"] <- "TC"
data[data$Cover=="Tree Cover + Severe Goldenrods","CoverCode"] <- "GRTC"
data[data$Cover=="Tree cover + Steep slope","CoverCode"] <- "TCSS"
```
:::{.panel-tabset} 
#### Maryland 
```{r warning=F, message=F}
# per source models
data <- data %>%filter(!is.na(Height))
MD_data <- data %>% filter(Region=="Maryland")
MD_XCS <- MD_data %>% filter(Source=="XCS")
MD_XDS <- MD_data %>% filter(Source=="XDS")
MD_XPK <- MD_data %>% filter(Source=="XPK")

# models
MD_XCS_mod <- lmer(data=MD_XCS, Height~1 + (1|Replication))
MD_XDS_mod <- lmer(data=MD_XDS, Height~1 + (1|Replication))
MD_XPK_mod <- lmer(data=MD_XPK, Height~1 + (1|Replication))

summary(MD_XDS_mod)

XCS_ind_vals <- resid(MD_XCS_mod) + fixef(MD_XCS_mod)
XDS_ind_vals <- resid(MD_XDS_mod) + fixef(MD_XDS_mod)
XPK_ind_vals <- resid(MD_XPK_mod) + fixef(MD_XPK_mod)

MD_XCS <- cbind(MD_XCS,XCS_ind_vals)
MD_XDS <- cbind(MD_XDS,XDS_ind_vals)
MD_XPK <- cbind(MD_XPK,XPK_ind_vals)

colnames(MD_XCS)[15] <- "ind_vals"
colnames(MD_XDS)[15] <- "ind_vals"
colnames(MD_XPK)[15] <- "ind_vals"

data_MD <- rbind(MD_XCS,MD_XDS,MD_XPK)
```

#### West Virginia  
```{r}
data <- data %>%filter(!is.na(Height))
WV_data <- data %>% filter(Region=="West_Virginia")
WV_data$Source <- as.factor(WV_data$Source)
WV_data$Source <- droplevels(WV_data$Source)

# subset df
WV_XCS <- WV_data %>% filter(Source=="XCS")
WV_XDS <- WV_data %>% filter(Source=="XDS")
WV_XPK <- WV_data %>% filter(Source=="XPK")
WV_XSK <- WV_data %>% filter(Source=="XSK")

# per source models
WV_XCS_mod <- lmer(data=WV_XCS, Height~1 + (1|Replication))
WV_XDS_mod <- lmer(data=WV_XDS, Height~1 + (1|Replication))
WV_XPK_mod <- lmer(data=WV_XPK, Height~1 + (1|Replication))
WV_XSK_mod <- lmer(data=WV_XSK, Height~1 + (1|Replication))


XCS_ind_vals <- resid(WV_XCS_mod) + fixef(WV_XCS_mod)
XDS_ind_vals <- resid(WV_XDS_mod) + fixef(WV_XDS_mod)
XPK_ind_vals <- resid(WV_XPK_mod) + fixef(WV_XPK_mod)
XSK_ind_vals <- resid(WV_XSK_mod) + fixef(WV_XSK_mod)

WV_XCS <- cbind(WV_XCS,XCS_ind_vals)
WV_XDS <- cbind(WV_XDS,XDS_ind_vals)
WV_XPK <- cbind(WV_XPK,XPK_ind_vals)
WV_XSK <- cbind(WV_XSK,XSK_ind_vals)

colnames(WV_XCS)[15] <- "ind_vals"
colnames(WV_XDS)[15] <- "ind_vals"
colnames(WV_XPK)[15] <- "ind_vals"
colnames(WV_XSK)[15] <- "ind_vals"

data_WV <- rbind(WV_XCS,WV_XDS,WV_XPK,WV_XSK)

```

#### Virginia  
```{r}
data <- data %>%filter(!is.na(Height))
VA_data <- data %>% filter(Region=="Virginia")
VA_data$Source <- as.factor(VA_data$Source)
VA_data$Source <- droplevels(VA_data$Source)

# subset df
VA_BFA <- VA_data %>% filter(Source=="BFA")
VA_XDS <- VA_data %>% filter(Source=="XDS")
VA_XPK <- VA_data %>% filter(Source=="XPK")
VA_KOS <- VA_data %>% filter(Source=="KOS")

# per source models
VA_BFA_mod <- lmer(data=VA_BFA, Height~1 + (1|Replication))
VA_XDS_mod <- lmer(data=VA_XDS, Height~1 + (1|Replication))
VA_XPK_mod <- lmer(data=VA_XPK, Height~1 + (1|Replication))
VA_KOS_mod <- lmer(data=VA_KOS, Height~1 + (1|Replication))


BFA_ind_vals <- resid(VA_BFA_mod) + fixef(VA_BFA_mod)
XDS_ind_vals <- resid(VA_XDS_mod) + fixef(VA_XDS_mod)
XPK_ind_vals <- resid(VA_XPK_mod) + fixef(VA_XPK_mod)
KOS_ind_vals <- resid(VA_KOS_mod) + fixef(VA_KOS_mod)

VA_BFA <- cbind(VA_BFA,BFA_ind_vals)
VA_XDS <- cbind(VA_XDS,XDS_ind_vals)
VA_XPK <- cbind(VA_XPK,XPK_ind_vals)
VA_KOS <- cbind(VA_KOS,KOS_ind_vals)

colnames(VA_BFA)[15] <- "ind_vals"
colnames(VA_XDS)[15] <- "ind_vals"
colnames(VA_XPK)[15] <- "ind_vals"
colnames(VA_KOS)[15] <- "ind_vals"

data_VA <- rbind(VA_BFA,VA_XDS,VA_XPK,VA_KOS)

```
:::  

### Modelled height (Viz.)  

```{r message=FALSE, warning=FALSE, fig.dim=c(20,10)}
data_height <- rbind(data_MD,data_WV,data_VA)
data_height$Region <- factor(data_height$Region, levels=c('Maryland', 'West_Virginia', 'Virginia'))
                
                
height_plot <-    ggplot(data=data_height, aes(x=ind_vals)) + 
                  geom_histogram(aes(y=(..density..), fill = Region, alpha=0.3), position="identity",bins=40) +
                  scale_fill_manual(values = c("#9FE2BF","#FF7F50","#CCCCFF"))+
                  # add vline
                  geom_vline(aes(xintercept=mean(ind_vals)),
                             linetype="dashed", color="#7B241C")+
                  # add geom_density
                  # geom_density(data=filter(data_MD, Source=="XCS"), alpha=.2, color="#40E0D0")+
                  # geom_density(data=filter(data_MD, Source=="XDS"), alpha=.2,  color="#DE3163")+
                  # geom_density(data=filter(data_MD, Source=="XPK"), alpha=.2, color="#6495ED")+
                  stat_density(aes(x=ind_vals, colour=Source),
                                  geom="line",position="identity",size=1.5)+
                  scale_color_manual( values = c("#FFD92F","#FC8D59","#D73027","#1B9E77","#1F78B4","#E78AC3"))+  
                  facet_grid(.~Region) +
                  
                  # theme
                                theme_minimal()+theme_classic()+
                                ylab("Frequency") + xlab("Height (in cm.)") + 
                                theme_bw(base_size = 11, base_family = "Times") +
                                theme(axis.text=element_text(size=14), 
                                      axis.title=element_text(size=18),
                                      panel.background = element_blank(), 
                                      legend.background = element_blank(), 
                                      panel.grid = element_blank(), 
                                      plot.background = element_blank(), 
                                      legend.text=element_text(size=rel(.8)), 
                                      strip.text = element_text(size=30))
# dim(10,25) pdf and dim(1800,700h) jpg
height_plot + guides(alpha = "none", fill = "none")
```

### Models  

:::{.panel-tabset}  
#### Full model
```{r}
ht_mod2 <- lmer(data=data_height, Height ~ Region + Source + (1|Replication))
summary(ht_mod2)
```

#### TukeyHSD  
```{r}
# mod 2 glht
ghlt_ht_mod2_reg <- glht(ht_mod2, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_mod2_reg)
```
:::

#### Region models  

:::{.panel-tabset}  
##### Maryland
```{r}
ht_MD_mod <- lmer(data=data_MD, Height ~ Source + (1|Replication))
summary(ht_MD_mod)

ghlt_ht_MD <- glht(ht_MD_mod, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_MD)
```

##### West Virginia
```{r}
ht_WV_mod <- lmer(data=data_WV, Height ~ Source + (1|Replication))
summary(ht_WV_mod)

ghlt_ht_WV <- glht(ht_WV_mod, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_WV)
```

##### Virginia
```{r}
ht_VA_mod <- lmer(data=data_VA, Height ~ Source + (1|Replication))
summary(ht_VA_mod)

ghlt_ht_VA <- glht(ht_VA_mod, linfct = mcp(Source = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_VA)
```
:::


#### Source models  

:::{.panel-tabset}  
##### XDS
```{r}
XDS_ht <- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %>% filter(Source == "XDS"))
summary(XDS_ht)

ghlt_ht_XDS <- glht(XDS_ht, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_XDS)
```

##### XPK
```{r}
XPK_ht <- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %>% filter(Source == "XPK"))
summary(XPK_ht)

ghlt_ht_XPK <- glht(XPK_ht, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_XPK)
```

##### XCS
```{r}
XCS_ht <- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %>% filter(Source == "XCS"))
summary(XCS_ht)

ghlt_ht_XCS <- glht(XCS_ht, linfct = mcp(Region = "Tukey"),test=adjusted("holm"))
summary(ghlt_ht_XCS)
```
:::
[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bringing genomics to the field",
    "section": "",
    "text": "About\n\nBringing genomics to the field: An integrative approach to forest restoration\nAnoob Prakash, Thibaut Capblancq, Kathryn Shallows, Dave Seville, Deborah Landau, Chad Landress, Tal Jacobs and Stephen Keller\n\nClimate change and anthropogenic land use are increasingly threatening the health and productivity of natural forest ecosystems. Assisted migration and reforestation are important tools to help mitigate these impacts, with recent calls for large-scale tree planting campaigns to help offset climate change. However, important questions remain about how best to source restoration seeds to ensure vigorous establishment and future adaptability. An often unaddressed issue is how to strategically sample the local gene pool to maximally capture standing genetic diversity while also avoiding the genetic load of deleterious mutations. Importantly, this optimization of diversity while minimizing load should explicitly take into account local adaptation to avoid outbreeding depression with the planting site. The benefits of this three-part strategy (diversity-load-adaptation) are to increase early-life fitness at planting, while also boosting the evolutionary potential to respond to future stressors. We provide a case study of our approach based on the forest tree red spruce (Picea rubens).\n\n\n\n\n\nUsing published exome-capture sequencing, we first demonstrate a computational approach to finding the best n-sets from a candidate list of source populations local to the region of reforestation that collectively achieve high diversity and minimal load. Three different best n-sets of sources were then selected for collection and propagation, corresponding to target restoration sites in Maryland, Virginia and West Virginia of importance to the Nature Conservancy (TNC) and the Central Appalachian Spruce Restoration Initiative (CASRI). After 1 year of propagation under greenhouse conditions, TNC and CASRI planted 58,000 of these seedlings across 3 sites, totalling 255 acres. A subset of seedlings at each site were monitored 1 year later for establishment success. Our study shows the potential for integrating genomics into local-scale restoration, and the importance of building partnerships between academic researchers and applied conservation managers."
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#early-life-fitness",
    "href": "gd_gl_vs_earlyLife_fitness.html#early-life-fitness",
    "title": "1  Why GD and GL?",
    "section": "1.2 Early-Life fitness",
    "text": "1.2 Early-Life fitness\n\nfitness &lt;- read.table(\"./data/FitnessTraits_GeneticParameters_RedSpruce.txt\",\n                      header = T, stringsAsFactors = T)\nfitness$Region &lt;- factor(fitness$Region, levels = c(\"C\",\"M\",\"E\"),\n                                         labels = c(\"Core\",\"Margin\",\"Edge\"))"
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#model-stats",
    "href": "gd_gl_vs_earlyLife_fitness.html#model-stats",
    "title": "1  Why GD and GL?",
    "section": "1.3 Model stats",
    "text": "1.3 Model stats\n\n# model\nmodelFitness &lt;- lm(Fitness ~ Population_Homozygosity + Family_Homozygosity + Genetic_Diversity + Genetic_Load + SeedWeight, data=fitness %&gt;% filter(Region==\"Edge\"))\n\n# modelFitness &lt;- lm(Fitness ~ Genetic_Diversity + Genetic_Load + SeedWeight + Region + Region*Genetic_Diversity + Region*Genetic_Load, data=fitness)\nsummary(modelFitness)\n\n\nCall:\nlm(formula = Fitness ~ Population_Homozygosity + Family_Homozygosity + \n    Genetic_Diversity + Genetic_Load + SeedWeight, data = fitness %&gt;% \n    filter(Region == \"Edge\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.8125  -3.8816  -0.0977   3.0421  16.1853 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)               171.160    114.954   1.489  0.13981   \nPopulation_Homozygosity -1502.700    555.629  -2.705  0.00811 **\nFamily_Homozygosity         9.763     45.974   0.212  0.83229   \nGenetic_Diversity         658.994    196.546   3.353  0.00115 **\nGenetic_Load             -222.175    106.385  -2.088  0.03944 * \nSeedWeight               2031.839    688.135   2.953  0.00397 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.968 on 95 degrees of freedom\nMultiple R-squared:  0.1985,    Adjusted R-squared:  0.1563 \nF-statistic: 4.705 on 5 and 95 DF,  p-value: 0.0006982"
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#model-viz.",
    "href": "gd_gl_vs_earlyLife_fitness.html#model-viz.",
    "title": "1  Why GD and GL?",
    "section": "1.4 Model Viz.",
    "text": "1.4 Model Viz.\n\n# model marginal effects\np1 &lt;- plot_model(modelFitness, type = \"pred\", terms = c(\"Genetic_Diversity\"),\n                 title = \"\", axis.title = \"\") + \n  # aes(linetype=group,color=group)+\n  geom_line(alpha=1, linewidth=1) +\n  # scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\"),\n                        # name = \"Region\", \n                        # labels = c(\"Core\", \"Margin\",\"Edge\"))+ \n  facet_wrap(~\"Genetic Diversity\") + \n  # ylim(-20,40) + \n  labs(y=\"Early-Life Fitness\")+\n  theme_bw(base_size = 11, base_family = \"Times\") +\n            theme(axis.text=element_text(size=14), \n                  axis.title=element_text(size=18),\n                  panel.background = element_blank(), \n                  legend.background = element_blank(), \n                  panel.grid = element_blank(), \n                  plot.background = element_blank(), \n                  legend.text=element_text(size=rel(.8)), \n                  strip.text = element_text(size=30)) +\n  theme(axis.title.x=element_blank(), panel.grid = element_blank(),\n        legend.key=element_blank(), legend.background=element_blank())\n\np2 &lt;- plot_model(modelFitness, type = \"pred\", terms = c(\"Genetic_Load\"), \n                 title = \"\", axis.title = \"\") + \n  # aes(linetype=group,color=group)+\n  geom_line(alpha=1, size=1) +\n  # scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\"),\n  #                       name = \"Region\", \n  #                       labels = c(\"Core\", \"Margin\",\"Edge\"))+\n  facet_wrap(~\"Genetic Load\") + \n  # ylim(-20,40) + \n  # labs(color  = \"Region\", linetype = \"Region\")+\n  theme_bw(base_size = 11, base_family = \"Times\") +\n            theme(axis.text=element_text(size=14), \n                  axis.title=element_text(size=18),\n                  panel.background = element_blank(), \n                  legend.background = element_blank(), \n                  panel.grid = element_blank(), \n                  plot.background = element_blank(), \n                  legend.text=element_text(size=rel(.8)), \n                  strip.text = element_text(size=30)) +\n  theme(axis.title.x=element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid = element_blank())\n\n\n# dim 900w 450h jpg 4.5h 9w pdf\nggarrange(p1,p2, ncol = 2, common.legend = T, legend = \"right\", widths = c(1.1,1,1,1))\n\n\n\n\n\n\n\n\nCapblancq, Thibaut, Helena Munson, John R. Butnor, and Stephen R. Keller. 2021. “Genomic Drivers of Early-Life Fitness in Picea Rubens.” Conservation Genetics 22 (6): 963–76. https://doi.org/10.1007/s10592-021-01378-7."
  },
  {
    "objectID": "genomics_informed_provenancing.html#setting-up",
    "href": "genomics_informed_provenancing.html#setting-up",
    "title": "2  Genomic selection of sources",
    "section": "2.1 Setting up",
    "text": "2.1 Setting up\nRead in the necessary data for the source optimization. SnpEff v5.1 (Cingolani et al. (2012)) was used to annotate genetic variants to functional class based on Norway spruce genome annotation.\n\n2.1.1 Import annotations from SnpEff\n\nlist &lt;- list.files(path = \"../../datashare/Spruce/exome_capture/WES_mapping/Annotations/ref_Pglauca/VCF_split_files\", \n                   pattern = \"Red_Spruce_intersect_poly_\", \n                   recursive=TRUE, full.names = T)\n\n# genes &lt;- lapply(list[1], function(x) read.table(x, nrow = 100000)) # originally run for testing\ngenes &lt;- lapply(list[1], function(x) read.table(x))\ncategory &lt;- lapply(genes, function(x) unlist(lapply(strsplit(as.character(x[,8]), split = \"|\", fixed = T), function(y) y[2])))\n\nTAB &lt;- genes[1:2]\nTAB &lt;- do.call(rbind, TAB)\ncategory &lt;- do.call(c, category)\n\nRead in the meta data for the samples\n\n# Info samples\nnames &lt;- unlist(lapply(strsplit(unlist(strsplit(as.character(read.table(\"all_bam.list\")[,1]), split = \"_rmdup.sorted.bam\")), split = \"./\"), function(x) x[2]))\npops &lt;- unlist(lapply(strsplit(names, split=\"_\"), function(x) x[1]))\n\ninfo_inds &lt;- read.table(\"./Info_samples_revised.txt\", header=T)\ninfo_inds &lt;- info_inds[match(as.character(names), as.character(info_inds$Family)),]\ninfo_pops &lt;- info_inds[!duplicated(info_inds$Site),-c(1,3,9,10)]\n\n\n\n2.1.2 Allele probabilities and frequencies\n\n# Read depth \ndepth &lt;- apply(TAB[,-c(1:9)], 2, function(x) as.integer(unlist(lapply(strsplit(as.character(x), split = \":\"), function(y) y[2]))))\n\n# Genotype probabilities, changed by NA for the uncovered sites \ngen_prob &lt;- apply(TAB[,-c(1:9)], 2, function(x) unlist(lapply(strsplit(as.character(x), split = \":\"), function(y) y[4])))\ngen_prob[which(depth==0)] &lt;- NA\n\n# Proba alternative allele\naltern_proba &lt;- apply(gen_prob, 2, function(x) (as.numeric(unlist(lapply(strsplit(as.character(x), split = \",\"), function(y) y[2])))+2*as.numeric(unlist(lapply(strsplit(as.character(x), split = \",\"), function(z) z[3]))))/2)\n\n# Frequency of the alternative allele for each locus and population\nTAB_pop &lt;- lapply(unique(pops),function(x) altern_proba[,which(pops==x)])\n\nnames(TAB_pop) &lt;- unique(pops)\n\nfreq_pop &lt;- lapply(TAB_pop, function(x) apply(x, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y))))"
  },
  {
    "objectID": "genomics_informed_provenancing.html#functions-to-optimize-selection",
    "href": "genomics_informed_provenancing.html#functions-to-optimize-selection",
    "title": "2  Genomic selection of sources",
    "section": "2.2 Functions to optimize selection",
    "text": "2.2 Functions to optimize selection\n\n2.2.1 Select regions to select sources\nBased on the idea of Regional admixture provenancing (Bucharova et al. (2019)), seed sources were selected regionally for each restoration site. Three groups of source populations were subsetted for the three planting sites, removing XVC and HR because of their northern ancestry. More info on the regional ancestry detailed in Capblancq et al. (2020).\n\n# Sources considered for the Maryland restoration site \nTAB_pop_maryland &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & !info_pops$State%in%c(\"NC\",\"TN\") & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\n# Sources considered for the West Virginia restoration site\nTAB_pop_westvirginia &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & info_pops$State==\"WV\" & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\n# Sources considered for the Virginia restoration site\nTAB_pop_virginia &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & (info_pops$State==\"WV\" & !info_pops$Site%in%c(\"XCV\") | info_pops$Site%in%c(\"GMF\",\"CR\",\"DG\",\"RP\")))])] # remove HR and CV for the paper\n\n\nOptimizing genetic diversityEstimate the genetic loadSource selection\n\n\n\n# function to estimate allelic richness after rarefaction\nrarefy_AR &lt;- function(data, g, bootstraping=100){\n  Nijg &lt;- list()\n  Njg &lt;- g*2\n  nbind &lt;- ncol(data)\n  Nij &lt;- list()\n  for(boot in 1:bootstraping){\n    inds &lt;- sample(1:nbind, g, replace = FALSE)\n    if(g==1){\n      Nij[[boot]] &lt;- data[,inds]*2}\n    if(g&gt;1){\n      Nij[[boot]] &lt;- apply(data[,inds], 1, function(x) sum(x, na.rm = T)/sum(!is.na(x)))*g*2}\n  }\n  Nijg &lt;- rowMeans(do.call(cbind, Nij), na.rm = T)\n  Qijg &lt;- (Njg-Nijg)/Njg\n  Pijg &lt;- 1-Qijg\n  return(Pijg)\n}\n\n\n\nThe following function is used to estiamte the ratio of nonsynonymous/synonymous mutation based on the annotation from SnpEff v5.1 (Cingolani et al. (2012)), which was used to annotate genetic variants to functional class based on Norway spruce genome annotation. The functional categories viz. missense variant, splice acceptor variant, splice donor variant, splice region variant, start lost, stop gained, stop lost were used to designate as non-synonymous mutation in our calculation for genetic load.\n\ngenetic_load &lt;- function(data, category){\n                nonsyn_sites &lt;- which(category==\"missense_variant\" | category==\"splice_acceptor_variant\" | category==\"splice_donor_variant\" | category==\"splice_region_variant\" | category==\"start_lost\" | category==\"stop_gained\" | category==\"stop_lost\")\n                freq_nonsyn &lt;- mean(data[nonsyn_sites], na.rm = T)\n                freq_syn &lt;- mean(data[-nonsyn_sites], na.rm = T)\n                ratio_2 &lt;- freq_nonsyn/freq_syn\n                return(ratio_2)\n}\n\n\n\nThis function combines the rarefy_AR and genetic_load function to estimate expected heterozygosity (Hexp), allelic richness and genetic load in all combinations of P populations. The P depends on the number of sources one decides to select for their restoration site.\n\n# function to estimate Hexp, Allelic Richness and Genetic Load in all combination of P populations\noptimize &lt;- function(data, P){\n  \n            # Total diversity and load with all the populations\n            TAB_tot &lt;- do.call(cbind,data)\n            freq_tot &lt;- apply(TAB_tot, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y)))\n            hexp_tot &lt;- mean(2*freq_tot*(1-freq_tot), na.rm = T)\n            #all_rich_tot &lt;- mean(rarefy_AR(TAB_tot, ncol(TAB_tot)), na.rm = T)\n            genetic_load_tot &lt;- genetic_load(TAB_tot, category)\n            \n            # Genetic diversity and load with only a subset of P populations\n            hexp_sub &lt;- list()\n           \n            genetic_load_sub &lt;- list()\n            names &lt;- list()\n            comb &lt;- combn(1:length(data), P, simplify = F)\n            for(i in 1:length(comb)){\n              TAB_sub &lt;- do.call(cbind, data[comb[[i]]])\n              freq_sub &lt;- apply(TAB_sub, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y)))\n              hexp_sub[i] &lt;- mean(2*freq_sub*(1-freq_sub), na.rm = T)\n              \n              genetic_load_sub[i] &lt;- genetic_load(TAB_sub, category)\n              names[i] &lt;- paste(names(data[comb[[i]]]), collapse=\"_\")\n            }\n            TAB_sub &lt;- do.call(rbind, lapply(1:length(hexp_sub), function(x) c(Hexp = hexp_sub[[x]], GenLoad = genetic_load_sub[[x]]))) #AllRich = all_rich_sub[[x]], \n            TAB &lt;- rbind(c(Hexp = hexp_tot, GenLoad = genetic_load_tot), TAB_sub) #AllRich = all_rich_tot, \n            rownames(TAB) &lt;- c(\"total\", unlist(names))\n            \n            return(TAB)\n}\n\n\n\n\n\n\n2.2.2 Apply the function to get optimal source combinations\n\n# Optimization sources for site in Maryland\nres_maryland &lt;- optimize(TAB_pop_maryland, 3)\nwhich.max(res_maryland[-1,1]/res_maryland[-1,2])\nres_maryland[c(1,which.max(res_maryland[-1,1]/res_maryland[-1,2])+1),]\n\n# Optimization sources for site in West Virginia\nres_westvirginia_4 &lt;- optimize(TAB_pop_westvirginia, 4)\nwhich.max(res_westvirginia_4[-1,1]/res_westvirginia_4[-1,2])\n\n# Optimization sources for site in Virginia\nres_virginia_4 &lt;- optimize(TAB_pop_virginia, 4)\nwhich.max(res_virginia_4[-1,1]/res_virginia_4[-1,2])"
  },
  {
    "objectID": "genomics_informed_provenancing.html#source-list",
    "href": "genomics_informed_provenancing.html#source-list",
    "title": "2  Genomic selection of sources",
    "section": "2.3 Source list",
    "text": "2.3 Source list\nEven though the optimal source combinations are obtained from the optimize function for each site. Its just a list of recommendations for the restoration practitioners to select from. The final source combination selected depends on the seed availability during the year of procurement.\n\n2.3.1 Plotting with base R\n\nMarylandWest VirginiaVirginia\n\n\n\n## MD\nDT::datatable(res_maryland,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_maryland[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\n\n\nres_maryland[\"XCS_XDS_XPK\",3] \n\n[1] 0.1808131\n\nabline(v=0.1808131, col=\"red\")\n\n\n\n\n\n\n\n## WV\nDT::datatable(res_westvirginia_4,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_westvirginia_4[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\nres_westvirginia_4[\"XCS_XDS_XPK_XSK\",3] \n\n[1] 0.1826622\n\nabline(v=0.1826622, col=\"red\")\n\n\n\n\n\n\n\n## VA\nDT::datatable(res_virginia_4,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_virginia_4[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\nres_virginia_4[\"BFA_KOS_XDS_XPK\",3] \n\n[1] 0.1758529\n\nabline(v=0.1758529, col=\"red\")\n\n\n\n\n\n\n\n\n\n2.3.2 Plotting with ggplot2\n\nMarylandWest VirginiaVirginiaCombine dataFinal Viz.\n\n\n\nrequire(ggplot2)\nrequire(dplyr)\n# Maryland final\nMD_data &lt;- as.data.frame(res_maryland[,1]/res_maryland[,2])\ncolnames(MD_data)[1] &lt;- \"GD_GL\"\nMD_data$Sources &lt;- rownames(MD_data)\nrownames(MD_data) &lt;- NULL\nMD_data &lt;- MD_data[-1,]\n\nMD_plot &lt;-    ggplot(MD_data, aes(x=GD_GL)) +\n              geom_histogram(aes(y=..density..),color=\"#9FE2BF\",fill=\"white\", position=\"dodge\", bins=60)+\n              geom_density(alpha=.2, fill=\"#9FE2BF\", color=\"#DFFF00\") +\n              geom_vline(aes(xintercept=res_maryland[\"XCS_XDS_XPK\",1]/res_maryland[\"XCS_XDS_XPK\",2]),\n                         linetype=\"dashed\", color=\"#7B241C\")+\n              theme(legend.position=\"top\")\n\nplot1 &lt;- MD_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\nplot1\n\n\n\n\n\n\n\n# West Virginia\nWV_data &lt;- as.data.frame(res_westvirginia_4[,1]/res_westvirginia_4[,2])\ncolnames(WV_data)[1] &lt;- \"GD_GL\"\nWV_data$Sources &lt;- rownames(WV_data)\nrownames(WV_data) &lt;- NULL\nWV_data &lt;- WV_data[-1,]\n\nWV_plot &lt;-    ggplot(WV_data, aes(x=GD_GL)) +\n  geom_histogram(aes(y=..density..),color=\"#FF7F50\",fill=\"white\", position=\"dodge\", bins=60)+\n  geom_density(alpha=.2, fill=\"#FF7F50\", color=\"#FFBF00\") +\n  geom_vline(aes(xintercept=res_westvirginia_4[\"XCS_XDS_XPK_XSK\",1]/res_westvirginia_4[\"XCS_XDS_XPK_XSK\",2]),\n             linetype=\"dashed\", color=\"#7B241C\")+\n  theme(legend.position=\"top\")\n\nplot2 &lt;- WV_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\n\nplot2\n\n\n\n\n\n\n\n# Virginia\nVA_data &lt;- as.data.frame(res_virginia_4[,1]/res_virginia_4[,2])\ncolnames(VA_data)[1] &lt;- \"GD_GL\"\nVA_data$Sources &lt;- rownames(VA_data)\nrownames(VA_data) &lt;- NULL\nVA_data &lt;- VA_data[-1,]\n\nVA_plot &lt;-    ggplot(VA_data, aes(x=GD_GL)) +\n  geom_histogram(aes(y=..density..),color=\"#CCCCFF\",fill=\"white\", position=\"dodge\", bins=60)+\n  geom_density(alpha=.2, fill=\"#CCCCFF\", color=\"#6495ED\") +\n  geom_vline(aes(xintercept=res_virginia_4[\"BFA_KOS_XDS_XPK\",1]/res_virginia_4[\"BFA_KOS_XDS_XPK\",2]),\n             linetype=\"dashed\", color=\"#7B241C\")+\n  theme(legend.position=\"top\")\n\nplot3 &lt;- VA_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\nplot3\n\n\n\n\n\n\n\n# save data for further analysis\nMD_reg_GDGL &lt;- as.data.frame(res_maryland)\nMD_reg_GDGL$GDGL &lt;- MD_reg_GDGL$Hexp/MD_reg_GDGL$GenLoad\n\nWV_reg_GDGL &lt;- as.data.frame(res_westvirginia_4)\nWV_reg_GDGL$GDGL &lt;- WV_reg_GDGL$Hexp/WV_reg_GDGL$GenLoad\n\nVA_reg_GDGL &lt;- as.data.frame(res_virginia_4)\nVA_reg_GDGL$GDGL &lt;- VA_reg_GDGL$Hexp/VA_reg_GDGL$GenLoad\n\nGDGL_list &lt;- list()\nGDGL_list[[1]] &lt;- MD_reg_GDGL\nGDGL_list[[2]] &lt;- WV_reg_GDGL\nGDGL_list[[3]] &lt;- VA_reg_GDGL\n\nnames(GDGL_list) &lt;- c(\"Maryland_GDGL\",\"West_Virginia_GDGL\",\"Virginia_GDGL\")\n\n# saveRDS(GDGL_list, \"./OUTPUT/Genetic_diversity_and_Genetic_load/GDGL_list\")\n\n# convert to long data\nMD_data2 &lt;- MD_data\nMD_data2$Plot &lt;- \"Maryland\"\nWV_data2 &lt;- WV_data\nWV_data2$Plot &lt;- \"West Virginia\"\nVA_data2 &lt;- VA_data\nVA_data2$Plot &lt;- \"Virginia\"\n\n\nGDGL_long_dat &lt;- rbind(MD_data2,WV_data2,VA_data2)\nGDGL_long_dat$Plot &lt;- factor(GDGL_long_dat$Plot,levels=c(\"Maryland\",\"West Virginia\",\"Virginia\"))\n\n\n# figure dim: png(2000h,769w), pdf(7h,18w)\nGDGL_plot &lt;- ggplot(GDGL_long_dat, aes(x=GD_GL,color=Plot,fill=Plot)) + facet_wrap(~Plot, scales=\"free\") + \n                # add histogram\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"Maryland\"), aes(y=..density..),color=\"#9FE2BF\",fill=\"white\", position=\"dodge\", bins=60)+\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), aes(y=..density..),color=\"#FF7F50\",fill=\"white\", position=\"dodge\", bins=60)+\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"Virginia\"), aes(y=..density..),color=\"#CCCCFF\",fill=\"white\", position=\"dodge\", bins=60)+\n                \n                # add geom_density\n                geom_density(data=filter(GDGL_long_dat, Plot==\"Maryland\"), alpha=.2, fill=\"#9FE2BF\", color=\"#40E0D0\") + \n                geom_density(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), alpha=.2, fill=\"#FF7F50\", color=\"#DE3163\") + \n                geom_density(data=filter(GDGL_long_dat, Plot==\"Virginia\"), alpha=.2, fill=\"#CCCCFF\", color=\"#6495ED\") +\n                \n                # add vline\n                geom_vline(data=filter(GDGL_long_dat, Plot==\"Maryland\"), \n                           aes(xintercept=res_maryland[\"XCS_XDS_XPK\",1]/res_maryland[\"XCS_XDS_XPK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") + \n                geom_vline(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), \n                           aes(xintercept=res_westvirginia_4[\"XCS_XDS_XPK_XSK\",1]/res_westvirginia_4[\"XCS_XDS_XPK_XSK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") + \n                geom_vline(data=filter(GDGL_long_dat, Plot==\"Virginia\"), \n                           aes(xintercept=res_virginia_4[\"BFA_KOS_XDS_XPK\",1]/res_virginia_4[\"BFA_KOS_XDS_XPK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") +\n                # theme\n                theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n                ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n                theme_bw(base_size = 11, base_family = \"Times\") +\n                theme(axis.text=element_text(size=14), \n                      axis.title=element_text(size=18),\n                      panel.background = element_blank(), \n                      legend.background = element_blank(), \n                      panel.grid = element_blank(), \n                      plot.background = element_blank(), \n                      legend.text=element_text(size=rel(.8)), \n                      strip.text = element_text(size=30),\n                      legend.position = \"none\")\n\n\n\n\nGDGL_plot"
  },
  {
    "objectID": "genomics_informed_provenancing.html#saving-data-for-downstream-analysis",
    "href": "genomics_informed_provenancing.html#saving-data-for-downstream-analysis",
    "title": "2  Genomic selection of sources",
    "section": "2.4 Saving data for downstream analysis",
    "text": "2.4 Saving data for downstream analysis\n\n2.4.1 Creating the GD/GL list\n\n# save data for further analysis\nMD_reg_GDGL &lt;- as.data.frame(res_maryland)\nMD_reg_GDGL$GDGL &lt;- MD_reg_GDGL$Hexp/MD_reg_GDGL$GenLoad\n\nWV_reg_GDGL &lt;- as.data.frame(res_westvirginia_4)\nWV_reg_GDGL$GDGL &lt;- WV_reg_GDGL$Hexp/WV_reg_GDGL$GenLoad\n\nVA_reg_GDGL &lt;- as.data.frame(res_virginia_4)\nVA_reg_GDGL$GDGL &lt;- VA_reg_GDGL$Hexp/VA_reg_GDGL$GenLoad\n\nGDGL_list &lt;- list()\nGDGL_list[[1]] &lt;- MD_reg_GDGL\nGDGL_list[[2]] &lt;- WV_reg_GDGL\nGDGL_list[[3]] &lt;- VA_reg_GDGL\n\nnames(GDGL_list) &lt;- c(\"Maryland_GDGL\",\"West_Virginia_GDGL\",\"Virginia_GDGL\")\n\n# saveRDS(GDGL_list, \"./OUTPUT/Genetic_diversity_and_Genetic_load/GDGL_list\")\n\n\n\n2.4.2 For source selection maps\n\nMarylandSources &lt;- tail(sort(res_maryland[-1,1]/res_maryland[-1,2]),50)\nMarylandSources &lt;- as.data.frame(MarylandSources)\nMarylandSources[2] &lt;- rownames(MarylandSources)\nrownames(MarylandSources) &lt;- NULL\ncolnames(MarylandSources)[2] &lt;- \"Source_combination\"\ncolnames(MarylandSources)[1] &lt;- \"GD/GL\"\n\nVirginiaSources &lt;- tail(sort(res_virginia_4[-1,1]/res_virginia_4[-1,2]),50)\nVirginiaSources &lt;- as.data.frame(VirginiaSources)\nVirginiaSources[2] &lt;- rownames(VirginiaSources)\nrownames(VirginiaSources) &lt;- NULL\ncolnames(VirginiaSources)[2] &lt;- \"Source_combination\"\ncolnames(VirginiaSources)[1] &lt;- \"GD/GL\"\n\n\nWestVirginiaSources &lt;- tail(sort(res_westvirginia_4[-1,1]/res_westvirginia_4[-1,2]),50)\nWestVirginiaSources &lt;- as.data.frame(WestVirginiaSources)\nWestVirginiaSources[2] &lt;- rownames(WestVirginiaSources)\nrownames(WestVirginiaSources) &lt;- NULL\ncolnames(WestVirginiaSources)[2] &lt;- \"Source_combination\"\ncolnames(WestVirginiaSources)[1] &lt;- \"GD/GL\"\n\n# write.csv(MarylandSources,\"./OUTPUT/MarylandSources_selected_top50.csv\")\n# write.csv(VirginiaSources,\"./OUTPUT/VirginiaSources_selected_top50.csv\")\n# write.csv(WestVirginiaSources,\"./OUTPUT/WestVirginiaSources_selected_top50.csv\")\n\n\n\n2.4.3 Estimate genetic load and genetic diversity of each pops\n\n# Optimization sources for site in Maryland\nres_maryland_singular &lt;- optimize(TAB_pop_maryland, 1)\nwhich.max(res_maryland_singular[-1,1]/res_maryland_singular[-1,2])\nres_maryland_singular[c(1,which.max(res_maryland_singular[-1,1]/res_maryland_singular[-1,2])+1),]\n\n# write.csv(res_maryland_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/maryland_GDGL_per_source\")\n\n# Optimization sources for site in West Virginia\nres_westvirginia_singular &lt;- optimize(TAB_pop_westvirginia, 1)\nwhich.max(res_westvirginia_singular[-1,1]/res_westvirginia_singular[-1,2])\nres_westvirginia_singular[c(1,which.max(res_westvirginia_singular[-1,1]/res_westvirginia_singular[-1,2])+1),]\n\n# write.csv(res_westvirginia_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/west_virginia_GDGL_per_source\")\n\n# Optimization sources for site in Virginia\nres_virginia_singular &lt;- optimize(TAB_pop_virginia, 1)\nwhich.max(res_virginia_singular[-1,1]/res_virginia_singular[-1,2])\nres_virginia_singular[c(1,which.max(res_virginia_singular[-1,1]/res_virginia_singular[-1,2])+1),]\n\n# write.csv(res_virginia_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/virginia_GDGL_per_source\")\n\n# full sets of pops\nTAB_pop_full &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\nres_pop_full_singular &lt;- optimize(TAB_pop_full, 1)\nwhich.max(res_pop_full_singular[-1,1]/res_pop_full_singular[-1,2])\nres_pop_full_singular[c(1,which.max(res_pop_full_singular[-1,1]/res_pop_full_singular[-1,2])+1),]\n\n\n\n\n\nBucharova, Anna, Oliver Bossdorf, Norbert Hölzel, Johannes Kollmann, Rüdiger Prasse, and Walter Durka. 2019. “Mix and Match: Regional Admixture Provenancing Strikes a Balance Among Different Seed-Sourcing Strategies for Ecological Restoration.” Conservation Genetics 20 (1): 7–17. https://doi.org/10.1007/s10592-018-1067-6.\n\n\nCapblancq, Thibaut, John R. Butnor, Sonia Deyoung, Ethan Thibault, Helena Munson, David M. Nelson, Matthew C. Fitzpatrick, and Stephen R. Keller. 2020. “Whole-Exome Sequencing Reveals a Long-Term Decline in Effective Population Size of Red Spruce (Picea Rubens).” Evolutionary Applications 13 (9): 2190–2205. https://doi.org/10.1111/eva.12985.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung Nguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden. 2012. “A Program for Annotating and Predicting the Effects of Single Nucleotide Polymorphisms, SnpEff: SNPs in the Genome of Drosophila Melanogaster Strain w 1118 ; Iso-2; Iso-3.” Fly 6 (2): 80–92. https://doi.org/10.4161/fly.19695."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever.\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bucharova, Anna, Oliver Bossdorf, Norbert Hölzel, Johannes Kollmann,\nRüdiger Prasse, and Walter Durka. 2019. “Mix and Match: Regional\nAdmixture Provenancing Strikes a Balance Among Different Seed-Sourcing\nStrategies for Ecological Restoration.” Conservation\nGenetics 20 (1): 7–17. https://doi.org/10.1007/s10592-018-1067-6.\n\n\nCapblancq, Thibaut, John R. Butnor, Sonia Deyoung, Ethan Thibault,\nHelena Munson, David M. Nelson, Matthew C. Fitzpatrick, and Stephen R.\nKeller. 2020. “Whole-Exome Sequencing Reveals a Long-Term Decline\nin Effective Population Size of Red Spruce (Picea\nRubens).” Evolutionary Applications 13 (9): 2190–2205.\nhttps://doi.org/10.1111/eva.12985.\n\n\nCapblancq, Thibaut, Helena Munson, John R. Butnor, and Stephen R.\nKeller. 2021. “Genomic Drivers of Early-Life Fitness in\nPicea Rubens.” Conservation Genetics 22\n(6): 963–76. https://doi.org/10.1007/s10592-021-01378-7.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung\nNguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden.\n2012. “A Program for Annotating and Predicting the Effects of\nSingle Nucleotide Polymorphisms, SnpEff: SNPs\nin the Genome of Drosophila Melanogaster Strain w\n1118 ; Iso-2; Iso-3.” Fly 6 (2):\n80–92. https://doi.org/10.4161/fly.19695."
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#genetic-diversity-and-genetic-load",
    "href": "gd_gl_vs_earlyLife_fitness.html#genetic-diversity-and-genetic-load",
    "title": "1  Why GD and GL?",
    "section": "1.1 Genetic diversity and Genetic load",
    "text": "1.1 Genetic diversity and Genetic load\n\nrequire(tidyverse)\nrequire(lmerTest)\nrequire(sjPlot)\nrequire(ggpubr)\n\n\nGDGL_list &lt;- readRDS(\"./data/Genetic_diversity_and_Genetic_load/GDGL_list\")\nMD_GDGL &lt;- GDGL_list$Maryland_GDGL\nWV_GDGL &lt;- GDGL_list$West_Virginia_GDGL\nVA_GDGL &lt;- GDGL_list$Virginia_GDGL\n\nMD_GDGL &lt;- MD_GDGL[-1,]\nWV_GDGL &lt;- WV_GDGL[-1,]\nVA_GDGL &lt;- VA_GDGL[-1,]"
  }
]
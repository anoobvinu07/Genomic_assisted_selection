[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Bringing genomics to the field",
    "section": "",
    "text": "About\n\nBringing genomics to the field: An integrative approach to forest restoration\nAnoob Prakash, Thibaut Capblancq, Kathryn Shallows, Dave Seville, Deborah Landau, Chad Landress, Tal Jacobs and Stephen Keller\n\nClimate change and anthropogenic land use are increasingly threatening the health and productivity of natural forest ecosystems. Assisted migration and reforestation are important tools to help mitigate these impacts, with recent calls for large-scale tree planting campaigns to help offset climate change. However, important questions remain about how best to source restoration seeds to ensure vigorous establishment and future adaptability. An often unaddressed issue is how to strategically sample the local gene pool to maximally capture standing genetic diversity while also avoiding the genetic load of deleterious mutations. Importantly, this optimization of diversity while minimizing load should explicitly take into account local adaptation to avoid outbreeding depression with the planting site. The benefits of this three-part strategy (diversity-load-adaptation) are to increase early-life fitness at planting, while also boosting the evolutionary potential to respond to future stressors. We provide a case study of our approach based on the forest tree red spruce (Picea rubens).\n\n\n\n\n\nUsing published exome-capture sequencing, we first demonstrate a computational approach to finding the best n-sets from a candidate list of source populations local to the region of reforestation that collectively achieve high diversity and minimal load. Three different best n-sets of sources were then selected for collection and propagation, corresponding to target restoration sites in Maryland, Virginia and West Virginia of importance to the Nature Conservancy (TNC) and the Central Appalachian Spruce Restoration Initiative (CASRI). After 1 year of propagation under greenhouse conditions, TNC and CASRI planted 58,000 of these seedlings across 3 sites, totalling 255 acres. A subset of seedlings at each site were monitored 1 year later for establishment success. Our study shows the potential for integrating genomics into local-scale restoration, and the importance of building partnerships between academic researchers and applied conservation managers."
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#genetic-diversity-and-genetic-load",
    "href": "gd_gl_vs_earlyLife_fitness.html#genetic-diversity-and-genetic-load",
    "title": "1  Why GD and GL?",
    "section": "1.1 Genetic diversity and Genetic load",
    "text": "1.1 Genetic diversity and Genetic load\n\nrequire(tidyverse)\nrequire(lmerTest)\nrequire(sjPlot)\nrequire(ggpubr)\n\n\nGDGL_list &lt;- readRDS(\"./data/Genetic_diversity_and_Genetic_load/GDGL_list\")\nMD_GDGL &lt;- GDGL_list$Maryland_GDGL\nWV_GDGL &lt;- GDGL_list$West_Virginia_GDGL\nVA_GDGL &lt;- GDGL_list$Virginia_GDGL\n\nMD_GDGL &lt;- MD_GDGL[-1,]\nWV_GDGL &lt;- WV_GDGL[-1,]\nVA_GDGL &lt;- VA_GDGL[-1,]"
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#early-life-fitness",
    "href": "gd_gl_vs_earlyLife_fitness.html#early-life-fitness",
    "title": "1  Why GD and GL?",
    "section": "1.2 Early-Life fitness",
    "text": "1.2 Early-Life fitness\n\nfitness &lt;- read.table(\"./data/FitnessTraits_GeneticParameters_RedSpruce.txt\",\n                      header = T, stringsAsFactors = T)\nfitness$Region &lt;- factor(fitness$Region, levels = c(\"C\",\"M\",\"E\"),\n                                         labels = c(\"Core\",\"Margin\",\"Edge\"))"
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#model-stats",
    "href": "gd_gl_vs_earlyLife_fitness.html#model-stats",
    "title": "1  Why GD and GL?",
    "section": "1.3 Model stats",
    "text": "1.3 Model stats\n\n# model\nmodelFitness &lt;- lm(Fitness ~ Population_Homozygosity + Family_Homozygosity + Genetic_Diversity + Genetic_Load + SeedWeight, data=fitness %&gt;% filter(Region==\"Edge\"))\n\n# modelFitness &lt;- lm(Fitness ~ Genetic_Diversity + Genetic_Load + SeedWeight + Region + Region*Genetic_Diversity + Region*Genetic_Load, data=fitness)\nsummary(modelFitness)\n\n\nCall:\nlm(formula = Fitness ~ Population_Homozygosity + Family_Homozygosity + \n    Genetic_Diversity + Genetic_Load + SeedWeight, data = fitness %&gt;% \n    filter(Region == \"Edge\"))\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-10.8125  -3.8816  -0.0977   3.0421  16.1853 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)               171.160    114.954   1.489  0.13981   \nPopulation_Homozygosity -1502.700    555.629  -2.705  0.00811 **\nFamily_Homozygosity         9.763     45.974   0.212  0.83229   \nGenetic_Diversity         658.994    196.546   3.353  0.00115 **\nGenetic_Load             -222.175    106.385  -2.088  0.03944 * \nSeedWeight               2031.839    688.135   2.953  0.00397 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 5.968 on 95 degrees of freedom\nMultiple R-squared:  0.1985,    Adjusted R-squared:  0.1563 \nF-statistic: 4.705 on 5 and 95 DF,  p-value: 0.0006982"
  },
  {
    "objectID": "gd_gl_vs_earlyLife_fitness.html#model-viz.",
    "href": "gd_gl_vs_earlyLife_fitness.html#model-viz.",
    "title": "1  Why GD and GL?",
    "section": "1.4 Model Viz.",
    "text": "1.4 Model Viz.\n\n# model marginal effects\np1 &lt;- plot_model(modelFitness, type = \"pred\", terms = c(\"Genetic_Diversity\"),\n                 title = \"\", axis.title = \"\") + \n  # aes(linetype=group,color=group)+\n  geom_line(alpha=1, linewidth=1) +\n  # scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\"),\n                        # name = \"Region\", \n                        # labels = c(\"Core\", \"Margin\",\"Edge\"))+ \n  facet_wrap(~\"Genetic Diversity\") + \n  # ylim(-20,40) + \n  labs(y=\"Early-Life Fitness\")+\n  theme_bw(base_size = 11, base_family = \"Times\") +\n            theme(axis.text=element_text(size=14), \n                  axis.title=element_text(size=18),\n                  panel.background = element_blank(), \n                  legend.background = element_blank(), \n                  panel.grid = element_blank(), \n                  plot.background = element_blank(), \n                  legend.text=element_text(size=rel(.8)), \n                  strip.text = element_text(size=30)) +\n  theme(axis.title.x=element_blank(), panel.grid = element_blank(),\n        legend.key=element_blank(), legend.background=element_blank())\n\np2 &lt;- plot_model(modelFitness, type = \"pred\", terms = c(\"Genetic_Load\"), \n                 title = \"\", axis.title = \"\") + \n  # aes(linetype=group,color=group)+\n  geom_line(alpha=1, size=1) +\n  # scale_linetype_manual(values = c(\"solid\", \"dashed\", \"dotted\"),\n  #                       name = \"Region\", \n  #                       labels = c(\"Core\", \"Margin\",\"Edge\"))+\n  facet_wrap(~\"Genetic Load\") + \n  # ylim(-20,40) + \n  # labs(color  = \"Region\", linetype = \"Region\")+\n  theme_bw(base_size = 11, base_family = \"Times\") +\n            theme(axis.text=element_text(size=14), \n                  axis.title=element_text(size=18),\n                  panel.background = element_blank(), \n                  legend.background = element_blank(), \n                  panel.grid = element_blank(), \n                  plot.background = element_blank(), \n                  legend.text=element_text(size=rel(.8)), \n                  strip.text = element_text(size=30)) +\n  theme(axis.title.x=element_blank(), axis.text.y = element_blank(), axis.ticks.y = element_blank(), panel.grid = element_blank())\n\n\nggarrange(p1,p2, ncol = 2, common.legend = T, legend = \"right\", widths = c(1.1,1,1,1))\n\n\n\n\nEarly-Life fitness of seedlings from range edge against different genetic metrics\n\n\n\n\n\n\n\n\nCapblancq, Thibaut, Helena Munson, John R. Butnor, and Stephen R. Keller. 2021. “Genomic Drivers of Early-Life Fitness in Picea Rubens.” Conservation Genetics 22 (6): 963–76. https://doi.org/10.1007/s10592-021-01378-7."
  },
  {
    "objectID": "genomics_informed_provenancing.html#setting-up",
    "href": "genomics_informed_provenancing.html#setting-up",
    "title": "2  Genomic selection of sources",
    "section": "2.1 Setting up",
    "text": "2.1 Setting up\nRead in the necessary data for the source optimization. SnpEff v5.1 (Cingolani et al. (2012)) was used to annotate genetic variants to functional class based on Norway spruce genome annotation.\n\n2.1.1 Import annotations from SnpEff\n\nlist &lt;- list.files(path = \"../../datashare/Spruce/exome_capture/WES_mapping/Annotations/ref_Pglauca/VCF_split_files\", \n                   pattern = \"Red_Spruce_intersect_poly_\", \n                   recursive=TRUE, full.names = T)\n\n# genes &lt;- lapply(list[1], function(x) read.table(x, nrow = 100000)) # originally run for testing\ngenes &lt;- lapply(list[1], function(x) read.table(x))\ncategory &lt;- lapply(genes, function(x) unlist(lapply(strsplit(as.character(x[,8]), split = \"|\", fixed = T), function(y) y[2])))\n\nTAB &lt;- genes[1:2]\nTAB &lt;- do.call(rbind, TAB)\ncategory &lt;- do.call(c, category)\n\nRead in the meta data for the samples\n\n# Info samples\nnames &lt;- unlist(lapply(strsplit(unlist(strsplit(as.character(read.table(\"all_bam.list\")[,1]), split = \"_rmdup.sorted.bam\")), split = \"./\"), function(x) x[2]))\npops &lt;- unlist(lapply(strsplit(names, split=\"_\"), function(x) x[1]))\n\ninfo_inds &lt;- read.table(\"./Info_samples_revised.txt\", header=T)\ninfo_inds &lt;- info_inds[match(as.character(names), as.character(info_inds$Family)),]\ninfo_pops &lt;- info_inds[!duplicated(info_inds$Site),-c(1,3,9,10)]\n\n\n\n2.1.2 Allele probabilities and frequencies\n\n# Read depth \ndepth &lt;- apply(TAB[,-c(1:9)], 2, function(x) as.integer(unlist(lapply(strsplit(as.character(x), split = \":\"), function(y) y[2]))))\n\n# Genotype probabilities, changed by NA for the uncovered sites \ngen_prob &lt;- apply(TAB[,-c(1:9)], 2, function(x) unlist(lapply(strsplit(as.character(x), split = \":\"), function(y) y[4])))\ngen_prob[which(depth==0)] &lt;- NA\n\n# Proba alternative allele\naltern_proba &lt;- apply(gen_prob, 2, function(x) (as.numeric(unlist(lapply(strsplit(as.character(x), split = \",\"), function(y) y[2])))+2*as.numeric(unlist(lapply(strsplit(as.character(x), split = \",\"), function(z) z[3]))))/2)\n\n# Frequency of the alternative allele for each locus and population\nTAB_pop &lt;- lapply(unique(pops),function(x) altern_proba[,which(pops==x)])\n\nnames(TAB_pop) &lt;- unique(pops)\n\nfreq_pop &lt;- lapply(TAB_pop, function(x) apply(x, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y))))"
  },
  {
    "objectID": "genomics_informed_provenancing.html#functions-to-optimize-selection",
    "href": "genomics_informed_provenancing.html#functions-to-optimize-selection",
    "title": "2  Genomic selection of sources",
    "section": "2.2 Functions to optimize selection",
    "text": "2.2 Functions to optimize selection\n\n2.2.1 Select regions to select sources\nBased on the idea of Regional admixture provenancing (Bucharova et al. (2019)), seed sources were selected regionally for each restoration site. Three groups of source populations were subsetted for the three planting sites, removing XVC and HR because of their northern ancestry. More info on the regional ancestry detailed in Capblancq et al. (2020).\n\n# Sources considered for the Maryland restoration site \nTAB_pop_maryland &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & !info_pops$State%in%c(\"NC\",\"TN\") & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\n# Sources considered for the West Virginia restoration site\nTAB_pop_westvirginia &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & info_pops$State==\"WV\" & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\n# Sources considered for the Virginia restoration site\nTAB_pop_virginia &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & (info_pops$State==\"WV\" & !info_pops$Site%in%c(\"XCV\") | info_pops$Site%in%c(\"GMF\",\"CR\",\"DG\",\"RP\")))])] # remove HR and CV for the paper\n\n\n\n2.2.2 Different fucntions applied for source selection\n\nOptimizing genetic diversityEstimate the genetic loadSource selection\n\n\n\n# function to estimate allelic richness after rarefaction\nrarefy_AR &lt;- function(data, g, bootstraping=100){\n  Nijg &lt;- list()\n  Njg &lt;- g*2\n  nbind &lt;- ncol(data)\n  Nij &lt;- list()\n  for(boot in 1:bootstraping){\n    inds &lt;- sample(1:nbind, g, replace = FALSE)\n    if(g==1){\n      Nij[[boot]] &lt;- data[,inds]*2}\n    if(g&gt;1){\n      Nij[[boot]] &lt;- apply(data[,inds], 1, function(x) sum(x, na.rm = T)/sum(!is.na(x)))*g*2}\n  }\n  Nijg &lt;- rowMeans(do.call(cbind, Nij), na.rm = T)\n  Qijg &lt;- (Njg-Nijg)/Njg\n  Pijg &lt;- 1-Qijg\n  return(Pijg)\n}\n\n\n\nThe following function is used to estiamte the ratio of nonsynonymous/synonymous mutation based on the annotation from SnpEff v5.1 (Cingolani et al. (2012)), which was used to annotate genetic variants to functional class based on Norway spruce genome annotation. The functional categories viz. missense variant, splice acceptor variant, splice donor variant, splice region variant, start lost, stop gained, stop lost were used to designate as non-synonymous mutation in our calculation for genetic load.\n\ngenetic_load &lt;- function(data, category){\n                nonsyn_sites &lt;- which(category==\"missense_variant\" | category==\"splice_acceptor_variant\" | category==\"splice_donor_variant\" | category==\"splice_region_variant\" | category==\"start_lost\" | category==\"stop_gained\" | category==\"stop_lost\")\n                freq_nonsyn &lt;- mean(data[nonsyn_sites], na.rm = T)\n                freq_syn &lt;- mean(data[-nonsyn_sites], na.rm = T)\n                ratio_2 &lt;- freq_nonsyn/freq_syn\n                return(ratio_2)\n}\n\n\n\nThis function combines the rarefy_AR and genetic_load function to estimate expected heterozygosity (Hexp), allelic richness and genetic load in all combinations of P populations. The P depends on the number of sources one decides to select for their restoration site.\n\n# function to estimate Hexp, Allelic Richness and Genetic Load in all combination of P populations\noptimize &lt;- function(data, P){\n  \n            # Total diversity and load with all the populations\n            TAB_tot &lt;- do.call(cbind,data)\n            freq_tot &lt;- apply(TAB_tot, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y)))\n            hexp_tot &lt;- mean(2*freq_tot*(1-freq_tot), na.rm = T)\n            #all_rich_tot &lt;- mean(rarefy_AR(TAB_tot, ncol(TAB_tot)), na.rm = T)\n            genetic_load_tot &lt;- genetic_load(TAB_tot, category)\n            \n            # Genetic diversity and load with only a subset of P populations\n            hexp_sub &lt;- list()\n           \n            genetic_load_sub &lt;- list()\n            names &lt;- list()\n            comb &lt;- combn(1:length(data), P, simplify = F)\n            for(i in 1:length(comb)){\n              TAB_sub &lt;- do.call(cbind, data[comb[[i]]])\n              freq_sub &lt;- apply(TAB_sub, 1, function(y) sum(y, na.rm = T)/sum(!is.na(y)))\n              hexp_sub[i] &lt;- mean(2*freq_sub*(1-freq_sub), na.rm = T)\n              \n              genetic_load_sub[i] &lt;- genetic_load(TAB_sub, category)\n              names[i] &lt;- paste(names(data[comb[[i]]]), collapse=\"_\")\n            }\n            TAB_sub &lt;- do.call(rbind, lapply(1:length(hexp_sub), function(x) c(Hexp = hexp_sub[[x]], GenLoad = genetic_load_sub[[x]]))) #AllRich = all_rich_sub[[x]], \n            TAB &lt;- rbind(c(Hexp = hexp_tot, GenLoad = genetic_load_tot), TAB_sub) #AllRich = all_rich_tot, \n            rownames(TAB) &lt;- c(\"total\", unlist(names))\n            \n            return(TAB)\n}\n\n\n\n\n\n\n2.2.3 Apply the function to get optimal source combinations\n\n# Optimization sources for site in Maryland\nres_maryland &lt;- optimize(TAB_pop_maryland, 3)\nwhich.max(res_maryland[-1,1]/res_maryland[-1,2])\nres_maryland[c(1,which.max(res_maryland[-1,1]/res_maryland[-1,2])+1),]\n\n# Optimization sources for site in West Virginia\nres_westvirginia_4 &lt;- optimize(TAB_pop_westvirginia, 4)\nwhich.max(res_westvirginia_4[-1,1]/res_westvirginia_4[-1,2])\n\n# Optimization sources for site in Virginia\nres_virginia_4 &lt;- optimize(TAB_pop_virginia, 4)\nwhich.max(res_virginia_4[-1,1]/res_virginia_4[-1,2])"
  },
  {
    "objectID": "genomics_informed_provenancing.html#source-list",
    "href": "genomics_informed_provenancing.html#source-list",
    "title": "2  Genomic selection of sources",
    "section": "2.3 Source list",
    "text": "2.3 Source list\nEven though the optimal source combinations are obtained from the optimize function for each site. Its just a list of recommendations for the restoration practitioners to select from. The final source combination selected depends on the seed availability during the year of procurement.\n\n2.3.1 Plotting with base R\n\nMarylandWest VirginiaVirginia\n\n\n\n## MD\nDT::datatable(res_maryland,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_maryland[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\n\n\nres_maryland[\"XCS_XDS_XPK\",3] \n\n[1] 0.1808131\n\nabline(v=0.1808131, col=\"red\")\n\n\n\n\n\n\n\n## WV\nDT::datatable(res_westvirginia_4,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_westvirginia_4[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\nres_westvirginia_4[\"XCS_XDS_XPK_XSK\",3] \n\n[1] 0.1826622\n\nabline(v=0.1826622, col=\"red\")\n\n\n\n\n\n\n\n## VA\nDT::datatable(res_virginia_4,options = list(pageLength = 5, dom = 'tip'))\n\n\n\n\n\nhist(res_virginia_4[,3], xlab=\"Genetic diversity:Genetic load\",main=\"\")\nres_virginia_4[\"BFA_KOS_XDS_XPK\",3] \n\n[1] 0.1758529\n\nabline(v=0.1758529, col=\"red\")\n\n\n\n\n\n\n\n\n\n2.3.2 Plotting with ggplot2\n\nMarylandWest VirginiaVirginiaCombine dataFinal Viz.Stats\n\n\n\nrequire(ggplot2)\nrequire(dplyr)\n# Maryland final\nMD_data &lt;- as.data.frame(res_maryland[,1]/res_maryland[,2])\ncolnames(MD_data)[1] &lt;- \"GD_GL\"\nMD_data$Sources &lt;- rownames(MD_data)\nrownames(MD_data) &lt;- NULL\nMD_data &lt;- MD_data[-1,]\n\nMD_plot &lt;-    ggplot(MD_data, aes(x=GD_GL)) +\n              geom_histogram(aes(y=..density..),color=\"#9FE2BF\",fill=\"white\", position=\"dodge\", bins=60)+\n              geom_density(alpha=.2, fill=\"#9FE2BF\", color=\"#DFFF00\") +\n              geom_vline(aes(xintercept=res_maryland[\"XCS_XDS_XPK\",1]/res_maryland[\"XCS_XDS_XPK\",2]),\n                         linetype=\"dashed\", color=\"#7B241C\")+\n              theme(legend.position=\"top\")\n\nplot1 &lt;- MD_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\nplot1\n\n\n\n\n\n\n\n# West Virginia\nWV_data &lt;- as.data.frame(res_westvirginia_4[,1]/res_westvirginia_4[,2])\ncolnames(WV_data)[1] &lt;- \"GD_GL\"\nWV_data$Sources &lt;- rownames(WV_data)\nrownames(WV_data) &lt;- NULL\nWV_data &lt;- WV_data[-1,]\n\nWV_plot &lt;-    ggplot(WV_data, aes(x=GD_GL)) +\n  geom_histogram(aes(y=..density..),color=\"#FF7F50\",fill=\"white\", position=\"dodge\", bins=60)+\n  geom_density(alpha=.2, fill=\"#FF7F50\", color=\"#FFBF00\") +\n  geom_vline(aes(xintercept=res_westvirginia_4[\"XCS_XDS_XPK_XSK\",1]/res_westvirginia_4[\"XCS_XDS_XPK_XSK\",2]),\n             linetype=\"dashed\", color=\"#7B241C\")+\n  theme(legend.position=\"top\")\n\nplot2 &lt;- WV_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\n\nplot2\n\n\n\n\n\n\n\n# Virginia\nVA_data &lt;- as.data.frame(res_virginia_4[,1]/res_virginia_4[,2])\ncolnames(VA_data)[1] &lt;- \"GD_GL\"\nVA_data$Sources &lt;- rownames(VA_data)\nrownames(VA_data) &lt;- NULL\nVA_data &lt;- VA_data[-1,]\n\nVA_plot &lt;-    ggplot(VA_data, aes(x=GD_GL)) +\n  geom_histogram(aes(y=..density..),color=\"#CCCCFF\",fill=\"white\", position=\"dodge\", bins=60)+\n  geom_density(alpha=.2, fill=\"#CCCCFF\", color=\"#6495ED\") +\n  geom_vline(aes(xintercept=res_virginia_4[\"BFA_KOS_XDS_XPK\",1]/res_virginia_4[\"BFA_KOS_XDS_XPK\",2]),\n             linetype=\"dashed\", color=\"#7B241C\")+\n  theme(legend.position=\"top\")\n\nplot3 &lt;- VA_plot + scale_color_brewer(palette=\"Dark2\") +\n          theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n          ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n          theme_bw(base_size = 11, base_family = \"Times\") +\n          theme(axis.text=element_text(size=14), \n                axis.title=element_text(size=18),\n                panel.background = element_blank(), \n                legend.background = element_blank(), \n                panel.grid = element_blank(), \n                plot.background = element_blank(), \n                legend.text=element_text(size=rel(.8)), \n                strip.text = element_text(size=30),\n                legend.position = \"none\")\nplot3\n\n\n\n\n\n\n\n# save data for further analysis\nMD_reg_GDGL &lt;- as.data.frame(res_maryland)\nMD_reg_GDGL$GDGL &lt;- MD_reg_GDGL$Hexp/MD_reg_GDGL$GenLoad\n\nWV_reg_GDGL &lt;- as.data.frame(res_westvirginia_4)\nWV_reg_GDGL$GDGL &lt;- WV_reg_GDGL$Hexp/WV_reg_GDGL$GenLoad\n\nVA_reg_GDGL &lt;- as.data.frame(res_virginia_4)\nVA_reg_GDGL$GDGL &lt;- VA_reg_GDGL$Hexp/VA_reg_GDGL$GenLoad\n\nGDGL_list &lt;- list()\nGDGL_list[[1]] &lt;- MD_reg_GDGL\nGDGL_list[[2]] &lt;- WV_reg_GDGL\nGDGL_list[[3]] &lt;- VA_reg_GDGL\n\nnames(GDGL_list) &lt;- c(\"Maryland_GDGL\",\"West_Virginia_GDGL\",\"Virginia_GDGL\")\n\n# saveRDS(GDGL_list, \"./OUTPUT/Genetic_diversity_and_Genetic_load/GDGL_list\")\n\n# convert to long data\nMD_data2 &lt;- MD_data\nMD_data2$Plot &lt;- \"Maryland\"\nWV_data2 &lt;- WV_data\nWV_data2$Plot &lt;- \"West Virginia\"\nVA_data2 &lt;- VA_data\nVA_data2$Plot &lt;- \"Virginia\"\n\n\nGDGL_long_dat &lt;- rbind(MD_data2,WV_data2,VA_data2)\nGDGL_long_dat$Plot &lt;- factor(GDGL_long_dat$Plot,levels=c(\"Maryland\",\"West Virginia\",\"Virginia\"))\n\n\n# figure dim: png(2000h,769w), pdf(7h,18w)\nGDGL_plot &lt;- ggplot(GDGL_long_dat, aes(x=GD_GL,color=Plot,fill=Plot)) + facet_wrap(~Plot, scales=\"free\") + \n                # add histogram\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"Maryland\"), aes(y=..density..),color=\"#9FE2BF\",fill=\"white\", position=\"dodge\", bins=60)+\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), aes(y=..density..),color=\"#FF7F50\",fill=\"white\", position=\"dodge\", bins=60)+\n                geom_histogram(data=filter(GDGL_long_dat, Plot==\"Virginia\"), aes(y=..density..),color=\"#CCCCFF\",fill=\"white\", position=\"dodge\", bins=60)+\n                \n                # add geom_density\n                geom_density(data=filter(GDGL_long_dat, Plot==\"Maryland\"), alpha=.2, fill=\"#9FE2BF\", color=\"#40E0D0\") + \n                geom_density(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), alpha=.2, fill=\"#FF7F50\", color=\"#DE3163\") + \n                geom_density(data=filter(GDGL_long_dat, Plot==\"Virginia\"), alpha=.2, fill=\"#CCCCFF\", color=\"#6495ED\") +\n                \n                # add vline\n                geom_vline(data=filter(GDGL_long_dat, Plot==\"Maryland\"), \n                           aes(xintercept=res_maryland[\"XCS_XDS_XPK\",1]/res_maryland[\"XCS_XDS_XPK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") + \n                geom_vline(data=filter(GDGL_long_dat, Plot==\"West Virginia\"), \n                           aes(xintercept=res_westvirginia_4[\"XCS_XDS_XPK_XSK\",1]/res_westvirginia_4[\"XCS_XDS_XPK_XSK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") + \n                geom_vline(data=filter(GDGL_long_dat, Plot==\"Virginia\"), \n                           aes(xintercept=res_virginia_4[\"BFA_KOS_XDS_XPK\",1]/res_virginia_4[\"BFA_KOS_XDS_XPK\",2]),\n                           linetype=\"dashed\", color=\"#7B241C\") +\n                # theme\n                theme_minimal()+theme_classic()+theme(legend.position=\"top\") +\n                ylab(\"Frequency\") + xlab(\"Genetic Diversity/Genetic Load\") + \n                theme_bw(base_size = 11, base_family = \"Times\") +\n                theme(axis.text=element_text(size=14), \n                      axis.title=element_text(size=18),\n                      panel.background = element_blank(), \n                      legend.background = element_blank(), \n                      panel.grid = element_blank(), \n                      plot.background = element_blank(), \n                      legend.text=element_text(size=rel(.8)), \n                      strip.text = element_text(size=30),\n                      legend.position = \"none\")\n\n\n\n\nGDGL_plot # check 'Combine data' tab for the plot code\n\n\n\n\n\n\n\nMarylandWest VirginiaVirginia\n\n\n\nres_maryland &lt;- res_maryland[-1,]\nsummary(res_maryland)\n\n      Hexp           GenLoad           GDGL       \n Min.   :0.1700   Min.   :0.955   Min.   :0.1671  \n 1st Qu.:0.1737   1st Qu.:1.007   1st Qu.:0.1704  \n Median :0.1746   Median :1.015   Median :0.1719  \n Mean   :0.1745   Mean   :1.011   Mean   :0.1727  \n 3rd Qu.:0.1755   3rd Qu.:1.020   3rd Qu.:0.1743  \n Max.   :0.1772   Max.   :1.043   Max.   :0.1835  \n\n\nWhich quantile does the selected source GD/GL fall into?\n\nMD_quant &lt;- res_maryland[\"XCS_XDS_XPK\",]$GDGL\n\n# function to estimate which percentile the GD/GL of a source combination falls in\necdf_fun &lt;- function(x,perc) ecdf(x)(perc)\nround(ecdf_fun(res_maryland$GDGL,MD_quant),3)\n\n[1] 0.962\n\n\n\n\n\nres_westvirginia_4 &lt;- res_westvirginia_4[-1,]\nsummary(res_westvirginia_4)\n\n      Hexp           GenLoad            GDGL       \n Min.   :0.1747   Min.   :0.9617   Min.   :0.1696  \n 1st Qu.:0.1761   1st Qu.:1.0097   1st Qu.:0.1728  \n Median :0.1767   Median :1.0152   Median :0.1739  \n Mean   :0.1767   Mean   :1.0146   Mean   :0.1742  \n 3rd Qu.:0.1774   3rd Qu.:1.0191   3rd Qu.:0.1755  \n Max.   :0.1780   Max.   :1.0443   Max.   :0.1827  \n\n\nWhich quantile does the selected source GD/GL fall into?\n\nWV_quant &lt;- res_westvirginia_4[\"XCS_XDS_XPK_XSK\",]$GDGL\nround(ecdf_fun(res_westvirginia_4$GDGL,WV_quant),3) \n\n[1] 1\n\n# best source combination selected based on GD:GL  \n\n\n\n\nres_virginia_4 &lt;- res_virginia_4[-1,]\nsummary(res_virginia_4)\n\n      Hexp           GenLoad            GDGL       \n Min.   :0.1744   Min.   :0.9617   Min.   :0.1661  \n 1st Qu.:0.1759   1st Qu.:1.0124   1st Qu.:0.1717  \n Median :0.1764   Median :1.0186   Median :0.1730  \n Mean   :0.1764   Mean   :1.0209   Mean   :0.1729  \n 3rd Qu.:0.1770   3rd Qu.:1.0230   3rd Qu.:0.1747  \n Max.   :0.1780   Max.   :1.0527   Max.   :0.1827  \n\n\nWhich quantile does the selected source GD/GL fall into?\n\nVA_quant &lt;- res_virginia_4[\"BFA_KOS_XDS_XPK\",]$GDGL\nround(ecdf_fun(res_virginia_4$GDGL,VA_quant),3) \n\n[1] 0.912"
  },
  {
    "objectID": "genomics_informed_provenancing.html#saving-data-for-downstream-analysis",
    "href": "genomics_informed_provenancing.html#saving-data-for-downstream-analysis",
    "title": "2  Genomic selection of sources",
    "section": "2.4 Saving data for downstream analysis",
    "text": "2.4 Saving data for downstream analysis\n\n2.4.1 Creating the GD/GL list\n\n# save data for further analysis\nMD_reg_GDGL &lt;- as.data.frame(res_maryland)\nMD_reg_GDGL$GDGL &lt;- MD_reg_GDGL$Hexp/MD_reg_GDGL$GenLoad\n\nWV_reg_GDGL &lt;- as.data.frame(res_westvirginia_4)\nWV_reg_GDGL$GDGL &lt;- WV_reg_GDGL$Hexp/WV_reg_GDGL$GenLoad\n\nVA_reg_GDGL &lt;- as.data.frame(res_virginia_4)\nVA_reg_GDGL$GDGL &lt;- VA_reg_GDGL$Hexp/VA_reg_GDGL$GenLoad\n\nGDGL_list &lt;- list()\nGDGL_list[[1]] &lt;- MD_reg_GDGL\nGDGL_list[[2]] &lt;- WV_reg_GDGL\nGDGL_list[[3]] &lt;- VA_reg_GDGL\n\nnames(GDGL_list) &lt;- c(\"Maryland_GDGL\",\"West_Virginia_GDGL\",\"Virginia_GDGL\")\n\n# saveRDS(GDGL_list, \"./OUTPUT/Genetic_diversity_and_Genetic_load/GDGL_list\")\n\n\n\n2.4.2 For source selection maps\n\nMarylandSources &lt;- tail(sort(res_maryland[-1,1]/res_maryland[-1,2]),50)\nMarylandSources &lt;- as.data.frame(MarylandSources)\nMarylandSources[2] &lt;- rownames(MarylandSources)\nrownames(MarylandSources) &lt;- NULL\ncolnames(MarylandSources)[2] &lt;- \"Source_combination\"\ncolnames(MarylandSources)[1] &lt;- \"GD/GL\"\n\nVirginiaSources &lt;- tail(sort(res_virginia_4[-1,1]/res_virginia_4[-1,2]),50)\nVirginiaSources &lt;- as.data.frame(VirginiaSources)\nVirginiaSources[2] &lt;- rownames(VirginiaSources)\nrownames(VirginiaSources) &lt;- NULL\ncolnames(VirginiaSources)[2] &lt;- \"Source_combination\"\ncolnames(VirginiaSources)[1] &lt;- \"GD/GL\"\n\n\nWestVirginiaSources &lt;- tail(sort(res_westvirginia_4[-1,1]/res_westvirginia_4[-1,2]),50)\nWestVirginiaSources &lt;- as.data.frame(WestVirginiaSources)\nWestVirginiaSources[2] &lt;- rownames(WestVirginiaSources)\nrownames(WestVirginiaSources) &lt;- NULL\ncolnames(WestVirginiaSources)[2] &lt;- \"Source_combination\"\ncolnames(WestVirginiaSources)[1] &lt;- \"GD/GL\"\n\n# write.csv(MarylandSources,\"./OUTPUT/MarylandSources_selected_top50.csv\")\n# write.csv(VirginiaSources,\"./OUTPUT/VirginiaSources_selected_top50.csv\")\n# write.csv(WestVirginiaSources,\"./OUTPUT/WestVirginiaSources_selected_top50.csv\")\n\n\n\n2.4.3 Estimate genetic load and genetic diversity of each pops\n\n# Optimization sources for site in Maryland\nres_maryland_singular &lt;- optimize(TAB_pop_maryland, 1)\nwhich.max(res_maryland_singular[-1,1]/res_maryland_singular[-1,2])\nres_maryland_singular[c(1,which.max(res_maryland_singular[-1,1]/res_maryland_singular[-1,2])+1),]\n\n# write.csv(res_maryland_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/maryland_GDGL_per_source\")\n\n# Optimization sources for site in West Virginia\nres_westvirginia_singular &lt;- optimize(TAB_pop_westvirginia, 1)\nwhich.max(res_westvirginia_singular[-1,1]/res_westvirginia_singular[-1,2])\nres_westvirginia_singular[c(1,which.max(res_westvirginia_singular[-1,1]/res_westvirginia_singular[-1,2])+1),]\n\n# write.csv(res_westvirginia_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/west_virginia_GDGL_per_source\")\n\n# Optimization sources for site in Virginia\nres_virginia_singular &lt;- optimize(TAB_pop_virginia, 1)\nwhich.max(res_virginia_singular[-1,1]/res_virginia_singular[-1,2])\nres_virginia_singular[c(1,which.max(res_virginia_singular[-1,1]/res_virginia_singular[-1,2])+1),]\n\n# write.csv(res_virginia_singular, \"./OUTPUT/Genetic_diversity_and_Genetic_load/virginia_GDGL_per_source\")\n\n# full sets of pops\nTAB_pop_full &lt;- TAB_pop[which(names(TAB_pop)%in%info_pops$Site[which(info_pops$Region==\"E\" & !info_pops$Site%in%c(\"XCV\",\"HR\"))])]\n\nres_pop_full_singular &lt;- optimize(TAB_pop_full, 1)\nwhich.max(res_pop_full_singular[-1,1]/res_pop_full_singular[-1,2])\nres_pop_full_singular[c(1,which.max(res_pop_full_singular[-1,1]/res_pop_full_singular[-1,2])+1),]\n\n\n\n\n\nBucharova, Anna, Oliver Bossdorf, Norbert Hölzel, Johannes Kollmann, Rüdiger Prasse, and Walter Durka. 2019. “Mix and Match: Regional Admixture Provenancing Strikes a Balance Among Different Seed-Sourcing Strategies for Ecological Restoration.” Conservation Genetics 20 (1): 7–17. https://doi.org/10.1007/s10592-018-1067-6.\n\n\nCapblancq, Thibaut, John R. Butnor, Sonia Deyoung, Ethan Thibault, Helena Munson, David M. Nelson, Matthew C. Fitzpatrick, and Stephen R. Keller. 2020. “Whole-Exome Sequencing Reveals a Long-Term Decline in Effective Population Size of Red Spruce (Picea Rubens).” Evolutionary Applications 13 (9): 2190–2205. https://doi.org/10.1111/eva.12985.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung Nguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden. 2012. “A Program for Annotating and Predicting the Effects of Single Nucleotide Polymorphisms, SnpEff: SNPs in the Genome of Drosophila Melanogaster Strain w 1118 ; Iso-2; Iso-3.” Fly 6 (2): 80–92. https://doi.org/10.4161/fly.19695."
  },
  {
    "objectID": "experimental_plots.html#experimental-design",
    "href": "experimental_plots.html#experimental-design",
    "title": "3  Selection of experimental plots",
    "section": "3.1 Experimental design",
    "text": "3.1 Experimental design\nThe experimental design for the red spruce monitoring effort. A circular experimental plot of radius 16m was established at the restoration site for reforestation monitoring and to assess the performance of individual sources. Each experimental plot consisted of forty plants from a single source to reflect the planting density of the reforestation activity. These single source experimental plots were marked with a central metal rod capped with a bright orange cap along with GPS coordinates to make it easier for tracking down these plots for future monitoring efforts."
  },
  {
    "objectID": "experimental_plots.html#randomization-of-plots",
    "href": "experimental_plots.html#randomization-of-plots",
    "title": "3  Selection of experimental plots",
    "section": "3.2 Randomization of plots",
    "text": "3.2 Randomization of plots\nSoftware: ArcGIS Pro v.2.6.0.\nCreate a project\nInsert -&gt; New Map – to open the map viewer\nInsert -&gt; Layout – to open the layout of the map, so that it can be exported properly\n\n3.2.1 Map pane\n\nSelect Map ribbon -&gt; Basemap -&gt; USA topo maps (or any base map of choosing)\n\nSelect the shape file on the left navigation pane -&gt; Appearance ribbon at top -&gt; slide the slider to choose the transparency -&gt; set to 20%\n\nCreate random points within the Polygon/shape file\n\nGeoprocessing -&gt; Toolboxes -&gt; Data Management Tools -&gt; Sampling -&gt; Create random points\n\n\n\n\nSet the settings as shown here\n1. Output location: Place to store the shape files for the new polygon object\n2. Output point feature class: Name of the new point/ shape file to be created\n3. Number of Points – “Long”\n4. Enter the number of points needed\n5. Minimum allowed distance – Linear Unit\n6. Enter the distance between the points in meters\nSwitch to environment tab\n1. Change output coordinate system to the layer you are working with currently.\nClick Run\nRe-run the process till you get acceptable locations for the plots\n\n\n\nParametersEnvironments\n\n\n\n\n\n\n\n\n\n\n\n\nAdd buffer around the points\nThis step is done to see how much each plot take place within an area and to make sure the plot boundaries do not overlap.\nGeoprocessing -&gt; Analysis Tools -&gt; Proximity -&gt; Buffer\n\nSteps are similar to creating the random points as described above.\n\nSet buffer distance (radius of the plot) + 2m as buffer for each point.\n\nMerge points together\nGeoprocessing -&gt; Data Management Tools -&gt; General -&gt; Merge\nAdd coordinates\nGeoprocessing -&gt; Data Management Tools -&gt; Features -&gt; Add XY Coordinates\nAdd labels to the points\nSelect layer -&gt; Click Labeling -&gt; Label\n\nSet Field to column with ID that needs to displayed.\nUse Callout to add the label to the points.\nSet Label Placement to Basic Offset Point.\n\nChange color based on the naming convention:\nAppearance -&gt; Symbology -&gt; Unique Values\n\nSet Field to ID column.\n\nClick the expression builder button next to Field.\nLeft($feature.”ID_column”, “number of letters/numers to select”)\nClick Verify to check the output\n\nConvert to shapefile\nGeoprocessing -&gt; Conversion -&gt; Feature Class To Shapefile\nExport attribute table\nGeoprocessing -&gt; Conversion -&gt; Table To Excel\n\n\n3.2.2 Layout pane\nAdd map\nInsert -&gt; Map Frame -&gt;  Map\n- Click on the map frame and Activate in order to interact with the map\n- To deactivate the map frame\n- Activated Map Frame ribbon -&gt; Close Activation\nAdd compass\nSelect the Insert tab within the layout pane -&gt; North Arrow -&gt;Arc GIS North 13 arrow\nAdd border to map\n- Stay within the insert tab.\n- Click on the map frame.\n- Click Grid\n- Click Black Horizontal Label Graticule\n- Click \"Map Frame” tab -&gt; Gridlines -&gt; Set color to “No color”\nAdd legend\nInsert tab -&gt; Legend -&gt; Draw the legend\n- Click Legend -&gt; Format -&gt; Choose text\n- Right click on Legend on the left navigation pane -&gt; Properties\n- Change settings accordingly\n- Select “Show properties..” under Legend items\n- Select Items to show on the legend on the navigation pane check box\n- Once done; right click on the legend layer -&gt; Convert to graphics\n- Now remove items/edit items freely"
  },
  {
    "objectID": "field_monitoring.html#survivorship",
    "href": "field_monitoring.html#survivorship",
    "title": "4  Field Monitoring of survivorship and height",
    "section": "4.1 Survivorship",
    "text": "4.1 Survivorship\nData\n\n# packages\nrequire(lmerTest)\nrequire(dplyr)\nrequire(tidyr)\nrequire(DT)\nrequire(multcomp)\nrequire(sjPlot)\nrequire(ggplot2)\n\n\nmort_data &lt;- read.csv(\"./data/tnc_spring_2022.csv\", header=TRUE, stringsAsFactors = T)\nmort_data$Region &lt;- factor(mort_data$Region, levels = c('Maryland', 'West_Virginia', 'Virginia'))\nmort_data$Damage[is.na(mort_data$Height)] &lt;- \"Dead\"\nmort_data$Mortality[mort_data$Damage==\"Dead\"] &lt;- 0\nmort_data$Mortality[mort_data$Damage!=\"Dead\"] &lt;- 1\n\nMD_mort_data &lt;- mort_data[mort_data$Region == \"Maryland\",]\nWV_mort_data &lt;- mort_data[mort_data$Region == \"West_Virginia\",]\nVA_mort_data &lt;- mort_data[mort_data$Region == \"Virginia\",]\n\nSet up dummy data.frame\n\n# Initialize an empty data frame to store results\nSource_Mortality &lt;- NULL\nRegion_Mortality &lt;- NULL\n\nRegion_Mortality &lt;- data.frame(Region = character(),\n                         Source = character(),\n                         Vp = numeric(),\n                         mean = numeric(),\n                         H2 = numeric(),\n                         Va = numeric(),\n                         Mortality = numeric(),\n                         stringsAsFactors = T)\n\nSource_Mortality &lt;- data.frame(Region = character(),\n                         Source = character(),\n                         Vp = numeric(),\n                         mean = numeric(),\n                         H2 = numeric(),\n                         Va = numeric(),\n                         Mortality = numeric(),\n                         stringsAsFactors = T)\n\n# Initialize an empty list to store models\nmodel_list &lt;- list()\n\n\n\n\n\n\n\nModel ‘for loop’\n\n\n\n\n# subset based on region\nfor (Region in unique(mort_data$Region)) {\n  # subset based on region\n    subset_data &lt;- mort_data[mort_data$Region == Region,]\n    # Remove unused levels from the Source factor\n    subset_data$Source &lt;- droplevels(subset_data$Source)\n    \n  # model\n  model &lt;- glmer(Mortality ~ 1+ Source +  (1|Replication), data = subset_data,family = 'binomial')\n  \n\n  # Store model results  \n  model_name &lt;- paste0(Region, \"_mort_model\")\n  model_list[[model_name]] &lt;- model      \n}\n\n\n\n\nMD_mort_data$fit &lt;- predict(model_list$Maryland_mort_model)\nWV_mort_data$fit &lt;- predict(model_list$West_Virginia_mort_model)\nVA_mort_data$fit &lt;- predict(model_list$Virginia_mort_model)\n\npredict_dat &lt;- rbind(MD_mort_data,WV_mort_data,VA_mort_data)\npredict_dat$Region &lt;- factor(predict_dat$Region, levels=c('Maryland', 'West_Virginia', 'Virginia'))\n\n\n4.1.1 Model summary (Region)\n\n4.1.1.1 Maryland\n\nSummaryTukeyHSDViz.\n\n\n\nsummary(model_list$Maryland_mort_model)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Source + (1 | Replication)\n   Data: subset_data\n\n     AIC      BIC   logLik deviance df.resid \n   770.7    788.8   -381.3    762.7      676 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.8135 -0.7732  0.4149  0.6272  2.0378 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 0.5058   0.7112  \nNumber of obs: 680, groups:  Replication, 17\n\nFixed effects:\n            Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)  1.31706    0.36714   3.587 0.000334 ***\nSourceXDS   -1.84924    0.48995  -3.774 0.000160 ***\nSourceXPK   -0.02717    0.49464  -0.055 0.956189    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr) SrcXDS\nSourceXDS -0.751       \nSourceXPK -0.739  0.554\n\n\n\n\n\nghlt_MD &lt;- glht(model_list$Maryland_mort_model, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_MD)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Source + (1 | Replication), data = subset_data, \n    family = \"binomial\")\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)    \nXDS - XCS == 0 -1.84924    0.48995  -3.774 0.000459 ***\nXPK - XCS == 0 -0.02717    0.49464  -0.055 0.998336    \nXPK - XDS == 0  1.82206    0.46484   3.920 0.000243 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nMD_mort_plot &lt;- sjPlot::plot_model(model_list$Maryland_mort_model, type=\"pred\", axis.title = c(\"Sources\",\"Predicted probablities of Survival\"), title = \"Maryland\")\n\nMD_mort_plot$Source +\n  ylab(\"Predicted probablities of Survival\") +\n  scale_color_manual( values = c(\"#D73027\",\"#1B9E77\",\"#1F78B4\"))+\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\")) \n\n\n\n\n\n\n\n\n\n4.1.1.2 West Virginia\n\nSummaryTukeyHSDViz.\n\n\n\nsummary(model_list$West_Virginia_mort_model)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Source + (1 | Replication)\n   Data: subset_data\n\n     AIC      BIC   logLik deviance df.resid \n   574.2    597.1   -282.1    564.2      715 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.3033  0.1195  0.3027  0.4744  1.1717 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 1.723    1.313   \nNumber of obs: 720, groups:  Replication, 18\n\nFixed effects:\n            Estimate Std. Error z value Pr(&gt;|z|)  \n(Intercept)   1.7731     0.6968   2.545   0.0109 *\nSourceXDS    -0.6137     0.9381  -0.654   0.5130  \nSourceXPK     0.8408     0.9712   0.866   0.3866  \nSourceXSK     1.5055     1.0617   1.418   0.1562  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr) SrcXDS SrcXPK\nSourceXDS -0.741              \nSourceXPK -0.714  0.542       \nSourceXSK -0.652  0.498  0.492\n\n\n\n\n\nghlt_WV &lt;- glht(model_list$West_Virginia_mort_model, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_WV)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Source + (1 | Replication), data = subset_data, \n    family = \"binomial\")\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)\nXDS - XCS == 0  -0.6137     0.9381  -0.654    0.914\nXPK - XCS == 0   0.8408     0.9712   0.866    0.822\nXSK - XCS == 0   1.5055     1.0617   1.418    0.487\nXPK - XDS == 0   1.4545     0.9145   1.591    0.383\nXSK - XDS == 0   2.1192     1.0077   2.103    0.151\nXSK - XPK == 0   0.6647     1.0274   0.647    0.916\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nWV_mort_plot &lt;- sjPlot::plot_model(model_list$West_Virginia_mort_model, type=\"pred\", axis.title = c(\"Sources\",\"Predicted probablities of Survival\"), title = \"West Virginia\")\n\nWV_mort_plot$Source +\n  ylab(\"Predicted probablities of Survival\") +\n  scale_color_manual( values = c(\"#D73027\",\"#1B9E77\",\"#1F78B4\",\"#E78AC3\"))+\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\")) \n\n\n\n\n\n\n\n\n\n4.1.1.3 Virginia\n\nSummaryTukeyHSDViz.\n\n\n\nsummary(model_list$Virginia_mort_model)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Source + (1 | Replication)\n   Data: subset_data\n\n     AIC      BIC   logLik deviance df.resid \n   646.1    668.4   -318.1    636.1      635 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.4456 -0.6169  0.2249  0.5431  2.1207 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 2.165    1.471   \nNumber of obs: 640, groups:  Replication, 16\n\nFixed effects:\n            Estimate Std. Error z value Pr(&gt;|z|)\n(Intercept)   0.8096     0.7610   1.064    0.287\nSourceKOS     1.3581     1.1213   1.211    0.226\nSourceXDS    -1.7157     1.0737  -1.598    0.110\nSourceXPK     0.1687     1.0844   0.156    0.876\n\nCorrelation of Fixed Effects:\n          (Intr) SrcKOS SrcXDS\nSourceKOS -0.677              \nSourceXDS -0.709  0.480       \nSourceXPK -0.701  0.478  0.497\n\n\n\n\n\nghlt_VA &lt;- glht(model_list$Virginia_mort_model, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_VA)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Source + (1 | Replication), data = subset_data, \n    family = \"binomial\")\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)  \nKOS - BFA == 0   1.3581     1.1213   1.211   0.6196  \nXDS - BFA == 0  -1.7157     1.0737  -1.598   0.3796  \nXPK - BFA == 0   0.1687     1.0844   0.156   0.9987  \nXDS - KOS == 0  -3.0739     1.1201  -2.744   0.0308 *\nXPK - KOS == 0  -1.1895     1.1268  -1.056   0.7165  \nXPK - XDS == 0   1.8844     1.0824   1.741   0.3023  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nVA_mort_plot &lt;- sjPlot::plot_model(model_list$Virginia_mort_model, type=\"pred\", axis.title = c(\"Sources\",\"Predicted probablities of Survival\"), title = \"Virginia\")\n\nVA_mort_plot$Source +\n  ylab(\"Predicted probablities of Survival\") +\n  scale_color_manual( values = c(\"#FFD92F\",\"#FC8D59\",\"#D73027\",\"#1B9E77\",\"#1F78B4\"))+\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\")) \n\n\n\n\n\n\n\n\n\n\n4.1.2 Model summary (Sources)\n\n4.1.2.1 XDS\n\nSummaryTukeyHSDViz.\n\n\n\n# model\nXDS_mort &lt;- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %&gt;% filter(Source == \"XDS\"),family = 'binomial')\n\nsummary(XDS_mort)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Region + (1 | Replication)\n   Data: mort_data %&gt;% filter(Source == \"XDS\")\n\n     AIC      BIC   logLik deviance df.resid \n   719.5    737.1   -355.7    711.5      596 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.4244 -0.7585 -0.4652  0.7165  2.1495 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 0.8846   0.9406  \nNumber of obs: 600, groups:  Replication, 15\n\nFixed effects:\n                    Estimate Std. Error z value Pr(&gt;|z|)  \n(Intercept)          -0.5426     0.4105  -1.322   0.1863  \nRegionWest_Virginia   1.5919     0.6230   2.555   0.0106 *\nRegionVirginia       -0.3557     0.6493  -0.548   0.5838  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) RgnW_V\nRgnWst_Vrgn -0.661       \nRegionVirgn -0.632  0.417\n\n\n\n\n\nghlt_XDS &lt;- glht(XDS_mort, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_XDS)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Region + (1 | Replication), data = mort_data %&gt;% \n    filter(Source == \"XDS\"), family = \"binomial\")\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)  \nWest_Virginia - Maryland == 0   1.5919     0.6230   2.555   0.0285 *\nVirginia - Maryland == 0       -0.3557     0.6493  -0.548   0.8474  \nVirginia - West_Virginia == 0  -1.9475     0.6874  -2.833   0.0126 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nXDS_mort_plot &lt;- sjPlot::plot_model(XDS_mort, type=\"pred\", axis.title = c(\"Region\",\"Predicted probablities of Survival\"), title = \"XDS\")\n\nXDS_mort_plot$Region +\n  ylab(\"Predicted probablities of Survival\") +\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\")) \n\n\n\n\n\n\n\n\n\n4.1.2.2 XPK\n\nSummaryTukeyHSDViz.\n\n\n\n# model\nXPK_mort &lt;- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %&gt;% filter(Source == \"XPK\"),family = 'binomial')\n\nsummary(XPK_mort)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Region + (1 | Replication)\n   Data: mort_data %&gt;% filter(Source == \"XPK\")\n\n     AIC      BIC   logLik deviance df.resid \n   562.4    580.0   -277.2    554.4      596 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.9703  0.1535  0.3950  0.5047  1.6780 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 1.322    1.15    \nNumber of obs: 600, groups:  Replication, 15\n\nFixed effects:\n                    Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept)           1.3298     0.4986   2.667  0.00766 **\nRegionWest_Virginia   1.2015     0.7827   1.535  0.12477   \nRegionVirginia       -0.4046     0.7931  -0.510  0.60998   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) RgnW_V\nRgnWst_Vrgn -0.631       \nRegionVirgn -0.627  0.407\n\n\n\n\n\nghlt_XPK &lt;- glht(XPK_mort, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_XPK)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Region + (1 | Replication), data = mort_data %&gt;% \n    filter(Source == \"XPK\"), family = \"binomial\")\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)\nWest_Virginia - Maryland == 0   1.2015     0.7827   1.535    0.274\nVirginia - Maryland == 0       -0.4046     0.7931  -0.510    0.866\nVirginia - West_Virginia == 0  -1.6061     0.8585  -1.871    0.147\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nXPK_mort_plot &lt;- sjPlot::plot_model(XPK_mort, type=\"pred\", axis.title = c(\"Region\",\"Predicted probablities of Survival\"), title = \"XPK\")\n\nXPK_mort_plot$Region +\n  ylab(\"Predicted probablities of Survival\") +\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\")) \n\n\n\n\n\n\n\n\n\n4.1.2.3 XCS\n\nSummaryTukeyHSDViz.\n\n\n\n# model\nXCS_mort &lt;- glmer(Mortality ~ 1+ Region +  (1|Replication), data = mort_data %&gt;% filter(Source == \"XCS\"),family = 'binomial')\n\nsummary(XCS_mort)\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: Mortality ~ 1 + Region + (1 | Replication)\n   Data: mort_data %&gt;% filter(Source == \"XCS\")\n\n     AIC      BIC   logLik deviance df.resid \n   356.3    368.0   -175.1    350.3      357 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-2.9713  0.3366  0.3650  0.5051  0.8856 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept) 0.4407   0.6639  \nNumber of obs: 360, groups:  Replication, 9\n\nFixed effects:\n                    Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)           1.3088     0.3496   3.744 0.000181 ***\nRegionWest_Virginia   0.3978     0.5295   0.751 0.452505    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr)\nRgnWst_Vrgn -0.653\n\n\n\n\n\nghlt_XCS &lt;- glht(XCS_mort, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_XCS)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: glmer(formula = Mortality ~ 1 + Region + (1 | Replication), data = mort_data %&gt;% \n    filter(Source == \"XCS\"), family = \"binomial\")\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)\nWest_Virginia - Maryland == 0   0.3978     0.5295   0.751    0.453\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nXCS_mort_plot &lt;- sjPlot::plot_model(XCS_mort, type=\"pred\", axis.title = c(\"Region\",\"Predicted probablities of Survival\"), title = \"XCS\")\n\nXCS_mort_plot$Region +\n  ylab(\"Predicted probablities of Survival\") +\n      theme_bw() +  \n  theme(axis.text=element_text(size=15, face = \"bold\"), \n        axis.title=element_text(size=15, face = \"bold\"),\n        plot.title = element_text(size=15, face = \"bold\"),\n        legend.position = \"right\",\n        plot.background = element_blank(),\n        panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        panel.background = element_blank(),\n        plot.margin = unit(c(1,1,1,1), \"cm\"),\n        strip.text.x = element_text(size = 15, colour = \"black\", face = \"bold\"))"
  },
  {
    "objectID": "field_monitoring.html#height-after-one-year-of-planting",
    "href": "field_monitoring.html#height-after-one-year-of-planting",
    "title": "4  Field Monitoring of survivorship and height",
    "section": "4.2 Height after one year of planting",
    "text": "4.2 Height after one year of planting\n\n4.2.1 Data\n\n# data\ndata &lt;- read.csv(\"./data/tnc_spring_2022.csv\", header=TRUE)\nplot_cor &lt;- read.csv(\"./data/plot_coordinates.csv\", header=TRUE)\n\n# add coordinates \ndata &lt;- merge(data,plot_cor[,c(\"Replication\",\"POINT_X\",\"POINT_Y\")])\n\n# Create code for cover type\ndata[grepl(x=data$Cover,\"Goldenrods\"),\"CoverCode\"] &lt;- \"GR\"\ndata[data$Cover==\"Goldenrods + Grassy vegetation\",\"CoverCode\"] &lt;- \"GRGV\"\ndata[data$Cover==\"Goldenrods + Open\",\"CoverCode\"] &lt;- \"GROP\"\ndata[data$Cover==\"Goldenrods + Shrubs\",\"CoverCode\"] &lt;- \"GRSH\"\ndata[data$Cover==\"Goldenrods + Wet\",\"CoverCode\"] &lt;- \"GRWT\"\ndata[data$Cover==\"Grassy vegetation\",\"CoverCode\"] &lt;- \"GV\"\ndata[data$Cover==\"Grassy Vegetation + Open\",\"CoverCode\"] &lt;- \"GVOP\"\ndata[data$Cover==\"Grassy vegetation + Wet\",\"CoverCode\"] &lt;- \"GVWT\"\ndata[data$Cover==\"Tree cover\",\"CoverCode\"] &lt;- \"TC\"\ndata[data$Cover==\"Tree Cover + Severe Goldenrods\",\"CoverCode\"] &lt;- \"GRTC\"\ndata[data$Cover==\"Tree cover + Steep slope\",\"CoverCode\"] &lt;- \"TCSS\"\n\n\nMarylandWest VirginiaVirginia\n\n\n\n# per source models\ndata &lt;- data %&gt;%filter(!is.na(Height))\nMD_data &lt;- data %&gt;% filter(Region==\"Maryland\")\nMD_XCS &lt;- MD_data %&gt;% filter(Source==\"XCS\")\nMD_XDS &lt;- MD_data %&gt;% filter(Source==\"XDS\")\nMD_XPK &lt;- MD_data %&gt;% filter(Source==\"XPK\")\n\n# models\nMD_XCS_mod &lt;- lmer(data=MD_XCS, Height~1 + (1|Replication))\nMD_XDS_mod &lt;- lmer(data=MD_XDS, Height~1 + (1|Replication))\nMD_XPK_mod &lt;- lmer(data=MD_XPK, Height~1 + (1|Replication))\n\nsummary(MD_XDS_mod)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Height ~ 1 + (1 | Replication)\n   Data: MD_XDS\n\nREML criterion at convergence: 563.1\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.2927 -0.4131  0.1148  0.7627  2.2744 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  0.00    0.000   \n Residual                27.14    5.209   \nNumber of obs: 92, groups:  Replication, 6\n\nFixed effects:\n            Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)  25.6522     0.5431 91.0000   47.23   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\noptimizer (nloptwrap) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\nXCS_ind_vals &lt;- resid(MD_XCS_mod) + fixef(MD_XCS_mod)\nXDS_ind_vals &lt;- resid(MD_XDS_mod) + fixef(MD_XDS_mod)\nXPK_ind_vals &lt;- resid(MD_XPK_mod) + fixef(MD_XPK_mod)\n\nMD_XCS &lt;- cbind(MD_XCS,XCS_ind_vals)\nMD_XDS &lt;- cbind(MD_XDS,XDS_ind_vals)\nMD_XPK &lt;- cbind(MD_XPK,XPK_ind_vals)\n\ncolnames(MD_XCS)[15] &lt;- \"ind_vals\"\ncolnames(MD_XDS)[15] &lt;- \"ind_vals\"\ncolnames(MD_XPK)[15] &lt;- \"ind_vals\"\n\ndata_MD &lt;- rbind(MD_XCS,MD_XDS,MD_XPK)\n\n\n\n\ndata &lt;- data %&gt;%filter(!is.na(Height))\nWV_data &lt;- data %&gt;% filter(Region==\"West_Virginia\")\nWV_data$Source &lt;- as.factor(WV_data$Source)\nWV_data$Source &lt;- droplevels(WV_data$Source)\n\n# subset df\nWV_XCS &lt;- WV_data %&gt;% filter(Source==\"XCS\")\nWV_XDS &lt;- WV_data %&gt;% filter(Source==\"XDS\")\nWV_XPK &lt;- WV_data %&gt;% filter(Source==\"XPK\")\nWV_XSK &lt;- WV_data %&gt;% filter(Source==\"XSK\")\n\n# per source models\nWV_XCS_mod &lt;- lmer(data=WV_XCS, Height~1 + (1|Replication))\nWV_XDS_mod &lt;- lmer(data=WV_XDS, Height~1 + (1|Replication))\nWV_XPK_mod &lt;- lmer(data=WV_XPK, Height~1 + (1|Replication))\nWV_XSK_mod &lt;- lmer(data=WV_XSK, Height~1 + (1|Replication))\n\n\nXCS_ind_vals &lt;- resid(WV_XCS_mod) + fixef(WV_XCS_mod)\nXDS_ind_vals &lt;- resid(WV_XDS_mod) + fixef(WV_XDS_mod)\nXPK_ind_vals &lt;- resid(WV_XPK_mod) + fixef(WV_XPK_mod)\nXSK_ind_vals &lt;- resid(WV_XSK_mod) + fixef(WV_XSK_mod)\n\nWV_XCS &lt;- cbind(WV_XCS,XCS_ind_vals)\nWV_XDS &lt;- cbind(WV_XDS,XDS_ind_vals)\nWV_XPK &lt;- cbind(WV_XPK,XPK_ind_vals)\nWV_XSK &lt;- cbind(WV_XSK,XSK_ind_vals)\n\ncolnames(WV_XCS)[15] &lt;- \"ind_vals\"\ncolnames(WV_XDS)[15] &lt;- \"ind_vals\"\ncolnames(WV_XPK)[15] &lt;- \"ind_vals\"\ncolnames(WV_XSK)[15] &lt;- \"ind_vals\"\n\ndata_WV &lt;- rbind(WV_XCS,WV_XDS,WV_XPK,WV_XSK)\n\n\n\n\ndata &lt;- data %&gt;%filter(!is.na(Height))\nVA_data &lt;- data %&gt;% filter(Region==\"Virginia\")\nVA_data$Source &lt;- as.factor(VA_data$Source)\nVA_data$Source &lt;- droplevels(VA_data$Source)\n\n# subset df\nVA_BFA &lt;- VA_data %&gt;% filter(Source==\"BFA\")\nVA_XDS &lt;- VA_data %&gt;% filter(Source==\"XDS\")\nVA_XPK &lt;- VA_data %&gt;% filter(Source==\"XPK\")\nVA_KOS &lt;- VA_data %&gt;% filter(Source==\"KOS\")\n\n# per source models\nVA_BFA_mod &lt;- lmer(data=VA_BFA, Height~1 + (1|Replication))\nVA_XDS_mod &lt;- lmer(data=VA_XDS, Height~1 + (1|Replication))\nVA_XPK_mod &lt;- lmer(data=VA_XPK, Height~1 + (1|Replication))\nVA_KOS_mod &lt;- lmer(data=VA_KOS, Height~1 + (1|Replication))\n\n\nBFA_ind_vals &lt;- resid(VA_BFA_mod) + fixef(VA_BFA_mod)\nXDS_ind_vals &lt;- resid(VA_XDS_mod) + fixef(VA_XDS_mod)\nXPK_ind_vals &lt;- resid(VA_XPK_mod) + fixef(VA_XPK_mod)\nKOS_ind_vals &lt;- resid(VA_KOS_mod) + fixef(VA_KOS_mod)\n\nVA_BFA &lt;- cbind(VA_BFA,BFA_ind_vals)\nVA_XDS &lt;- cbind(VA_XDS,XDS_ind_vals)\nVA_XPK &lt;- cbind(VA_XPK,XPK_ind_vals)\nVA_KOS &lt;- cbind(VA_KOS,KOS_ind_vals)\n\ncolnames(VA_BFA)[15] &lt;- \"ind_vals\"\ncolnames(VA_XDS)[15] &lt;- \"ind_vals\"\ncolnames(VA_XPK)[15] &lt;- \"ind_vals\"\ncolnames(VA_KOS)[15] &lt;- \"ind_vals\"\n\ndata_VA &lt;- rbind(VA_BFA,VA_XDS,VA_XPK,VA_KOS)\n\n\n\n\n\n\n4.2.2 Modelled height (Viz.)\n\ndata_height &lt;- rbind(data_MD,data_WV,data_VA)\ndata_height$Region &lt;- factor(data_height$Region, levels=c('Maryland', 'West_Virginia', 'Virginia'))\n                \n                \nheight_plot &lt;-    ggplot(data=data_height, aes(x=ind_vals)) + \n                  geom_histogram(aes(y=(..density..), fill = Region, alpha=0.3), position=\"identity\",bins=40) +\n                  scale_fill_manual(values = c(\"#9FE2BF\",\"#FF7F50\",\"#CCCCFF\"))+\n                  # add vline\n                  geom_vline(aes(xintercept=mean(ind_vals)),\n                             linetype=\"dashed\", color=\"#7B241C\")+\n                  # add geom_density\n                  # geom_density(data=filter(data_MD, Source==\"XCS\"), alpha=.2, color=\"#40E0D0\")+\n                  # geom_density(data=filter(data_MD, Source==\"XDS\"), alpha=.2,  color=\"#DE3163\")+\n                  # geom_density(data=filter(data_MD, Source==\"XPK\"), alpha=.2, color=\"#6495ED\")+\n                  stat_density(aes(x=ind_vals, colour=Source),\n                                  geom=\"line\",position=\"identity\",size=1.5)+\n                  scale_color_manual( values = c(\"#FFD92F\",\"#FC8D59\",\"#D73027\",\"#1B9E77\",\"#1F78B4\",\"#E78AC3\"))+  \n                  facet_grid(.~Region) +\n                  \n                  # theme\n                                theme_minimal()+theme_classic()+\n                                ylab(\"Frequency\") + xlab(\"Height (in cm.)\") + \n                                theme_bw(base_size = 11, base_family = \"Times\") +\n                                theme(axis.text=element_text(size=14), \n                                      axis.title=element_text(size=18),\n                                      panel.background = element_blank(), \n                                      legend.background = element_blank(), \n                                      panel.grid = element_blank(), \n                                      plot.background = element_blank(), \n                                      legend.text=element_text(size=rel(.8)), \n                                      strip.text = element_text(size=30))\n# dim(10,25) pdf and dim(1800,700h) jpg\nheight_plot + guides(alpha = \"none\", fill = \"none\")\n\n\n\n\n\n\n4.2.3 Models\n\nFull modelTukeyHSD\n\n\n\nht_mod2 &lt;- lmer(data=data_height, Height ~ Region + Source + (1|Replication))\nsummary(ht_mod2)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Height ~ Region + Source + (1 | Replication)\n   Data: data_height\n\nREML criterion at convergence: 8484.9\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.9928 -0.6324  0.0482  0.6623  2.8154 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  1.672   1.293   \n Residual                23.907   4.890   \nNumber of obs: 1405, groups:  Replication, 51\n\nFixed effects:\n                     Estimate Std. Error        df t value Pr(&gt;|t|)    \n(Intercept)         29.454007   1.122895 39.590364  26.230  &lt; 2e-16 ***\nRegionWest_Virginia -0.699958   0.581064 34.412229  -1.205   0.2366    \nRegionVirginia      -1.915295   0.773156 43.759734  -2.477   0.0172 *  \nSourceKOS            0.005239   1.151964 34.359012   0.005   0.9964    \nSourceXCS           -1.131953   1.204792 37.773136  -0.940   0.3534    \nSourceXDS           -4.708422   1.088281 42.089912  -4.326 9.13e-05 ***\nSourceXPK           -2.735169   1.060830 38.256526  -2.578   0.0139 *  \nSourceXSK           -0.678425   1.359012 34.923908  -0.499   0.6208    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n            (Intr) RgnW_V RgnVrg SrcKOS SrcXCS SrcXDS SrcXPK\nRgnWst_Vrgn -0.254                                          \nRegionVirgn -0.689  0.368                                   \nSourceKOS   -0.513  0.000  0.000                            \nSourceXCS   -0.877  0.018  0.561  0.478                     \nSourceXDS   -0.866 -0.013  0.470  0.529  0.810              \nSourceXPK   -0.888  0.010  0.481  0.543  0.825  0.836       \nSourceXSK   -0.718 -0.218  0.411  0.424  0.717  0.722  0.729\n\n\n\n\n\n# mod 2 glht\nghlt_ht_mod2_reg &lt;- glht(ht_mod2, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_mod2_reg)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lmer(formula = Height ~ Region + Source + (1 | Replication), \n    data = data_height)\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)  \nWest_Virginia - Maryland == 0  -0.7000     0.5811  -1.205   0.4466  \nVirginia - Maryland == 0       -1.9153     0.7732  -2.477   0.0347 *\nVirginia - West_Virginia == 0  -1.2153     0.7775  -1.563   0.2585  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\n\n4.2.3.1 Region models\n\nMarylandWest VirginiaVirginia\n\n\n\nht_MD_mod &lt;- lmer(data=data_MD, Height ~ Source + (1|Replication))\nsummary(ht_MD_mod)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Height ~ Source + (1 | Replication)\n   Data: data_MD\n\nREML criterion at convergence: 2609\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.8687 -0.5706  0.0163  0.6703  2.6486 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  1.747   1.322   \n Residual                25.029   5.003   \nNumber of obs: 429, groups:  Replication, 17\n\nFixed effects:\n            Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)  28.2769     0.7197 12.6364  39.292 1.37e-14 ***\nSourceXDS    -2.8144     1.0569 16.5432  -2.663   0.0167 *  \nSourceXPK    -2.0341     0.9731 12.6057  -2.090   0.0575 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr) SrcXDS\nSourceXDS -0.681       \nSourceXPK -0.740  0.504\n\nghlt_ht_MD &lt;- glht(ht_MD_mod, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_MD)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lmer(formula = Height ~ Source + (1 | Replication), data = data_MD)\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)  \nXDS - XCS == 0  -2.8144     1.0569  -2.663   0.0210 *\nXPK - XCS == 0  -2.0341     0.9731  -2.090   0.0917 .\nXPK - XDS == 0   0.7804     1.0140   0.770   0.7215  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nht_WV_mod &lt;- lmer(data=data_WV, Height ~ Source + (1|Replication))\nsummary(ht_WV_mod)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Height ~ Source + (1 | Replication)\n   Data: data_WV\n\nREML criterion at convergence: 3571.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1723 -0.6705  0.0332  0.6327  2.8548 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  1.205   1.098   \n Residual                23.307   4.828   \nNumber of obs: 595, groups:  Replication, 18\n\nFixed effects:\n            Estimate Std. Error      df t value Pr(&gt;|t|)    \n(Intercept)  27.6686     0.6912 12.4450  40.031 1.58e-14 ***\nSourceXDS    -4.1474     0.9497 13.4500  -4.367 0.000706 ***\nSourceXPK    -1.1949     0.9227 12.2002  -1.295 0.219293    \nSourceXSK     0.4039     0.9675 11.9524   0.417 0.683753    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr) SrcXDS SrcXPK\nSourceXDS -0.728              \nSourceXPK -0.749  0.545       \nSourceXSK -0.714  0.520  0.535\n\nghlt_ht_WV &lt;- glht(ht_WV_mod, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_WV)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lmer(formula = Height ~ Source + (1 | Replication), data = data_WV)\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)    \nXDS - XCS == 0  -4.1474     0.9497  -4.367  &lt; 0.001 ***\nXPK - XCS == 0  -1.1949     0.9227  -1.295  0.56584    \nXSK - XCS == 0   0.4039     0.9675   0.417  0.97549    \nXPK - XDS == 0   2.9525     0.8933   3.305  0.00513 ** \nXSK - XDS == 0   4.5513     0.9394   4.845  &lt; 0.001 ***\nXSK - XPK == 0   1.5988     0.9121   1.753  0.29612    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nht_VA_mod &lt;- lmer(data=data_VA, Height ~ Source + (1|Replication))\nsummary(ht_VA_mod)\n\nLinear mixed model fit by REML. t-tests use Satterthwaite's method [\nlmerModLmerTest]\nFormula: Height ~ Source + (1 | Replication)\n   Data: data_VA\n\nREML criterion at convergence: 2292.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.4654 -0.6670  0.0774  0.6772  2.2452 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  2.925   1.710   \n Residual                23.460   4.844   \nNumber of obs: 381, groups:  Replication, 16\n\nFixed effects:\n            Estimate Std. Error       df t value Pr(&gt;|t|)    \n(Intercept) 27.58196    0.98788  6.39713  27.920 6.31e-08 ***\nSourceKOS    0.07704    1.40264  6.26935   0.055   0.9579    \nSourceXDS   -4.82575    1.49064  8.25086  -3.237   0.0114 *  \nSourceXPK   -2.66136    1.40670  6.46377  -1.892   0.1039    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nCorrelation of Fixed Effects:\n          (Intr) SrcKOS SrcXDS\nSourceKOS -0.704              \nSourceXDS -0.663  0.467       \nSourceXPK -0.702  0.495  0.465\n\nghlt_ht_VA &lt;- glht(ht_VA_mod, linfct = mcp(Source = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_VA)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lmer(formula = Height ~ Source + (1 | Replication), data = data_VA)\n\nLinear Hypotheses:\n               Estimate Std. Error z value Pr(&gt;|z|)   \nKOS - BFA == 0  0.07704    1.40264   0.055  0.99994   \nXDS - BFA == 0 -4.82575    1.49064  -3.237  0.00702 **\nXPK - BFA == 0 -2.66136    1.40670  -1.892  0.23122   \nXDS - KOS == 0 -4.90279    1.49586  -3.278  0.00589 **\nXPK - KOS == 0 -2.73840    1.41223  -1.939  0.21153   \nXPK - XDS == 0  2.16438    1.49967   1.443  0.47194   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\n\n\n4.2.3.2 Source models\n\nXDSXPKXCS\n\n\n\nXDS_ht &lt;- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %&gt;% filter(Source == \"XDS\"))\n\nWarning in glmer(Height ~ 1 + Region + (1 | Replication), data = data_height\n%&gt;% : calling glmer() with family=gaussian (identity link) as a shortcut to\nlmer() is deprecated; please call lmer() directly\n\nsummary(XDS_ht)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: Height ~ 1 + Region + (1 | Replication)\n   Data: data_height %&gt;% filter(Source == \"XDS\")\n\nREML criterion at convergence: 1705.6\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-3.1935 -0.6382  0.0765  0.6514  2.4126 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  2.299   1.516   \n Residual                27.743   5.267   \nNumber of obs: 276, groups:  Replication, 15\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)          25.4461     0.8534  29.819\nRegionWest_Virginia  -1.9687     1.1870  -1.659\nRegionVirginia       -2.7684     1.3805  -2.005\n\nCorrelation of Fixed Effects:\n            (Intr) RgnW_V\nRgnWst_Vrgn -0.719       \nRegionVirgn -0.618  0.444\n\nghlt_ht_XDS &lt;- glht(XDS_ht, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_XDS)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lme4::lmer(formula = Height ~ 1 + Region + (1 | Replication), \n    data = data_height %&gt;% filter(Source == \"XDS\"))\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)\nWest_Virginia - Maryland == 0  -1.9687     1.1870  -1.659    0.220\nVirginia - Maryland == 0       -2.7684     1.3805  -2.005    0.110\nVirginia - West_Virginia == 0  -0.7997     1.3632  -0.587    0.827\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nXPK_ht &lt;- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %&gt;% filter(Source == \"XPK\"))\n\nWarning in glmer(Height ~ 1 + Region + (1 | Replication), data = data_height\n%&gt;% : calling glmer() with family=gaussian (identity link) as a shortcut to\nlmer() is deprecated; please call lmer() directly\n\nsummary(XPK_ht)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: Height ~ 1 + Region + (1 | Replication)\n   Data: data_height %&gt;% filter(Source == \"XPK\")\n\nREML criterion at convergence: 2786.8\n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-4.0870 -0.6377  0.0226  0.6595  2.6684 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  0.9537  0.9766  \n Residual                22.8184  4.7769  \nNumber of obs: 466, groups:  Replication, 15\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)          26.2374     0.5332  49.205\nRegionWest_Virginia   0.2373     0.7778   0.305\nRegionVirginia       -1.2811     0.8754  -1.463\n\nCorrelation of Fixed Effects:\n            (Intr) RgnW_V\nRgnWst_Vrgn -0.686       \nRegionVirgn -0.609  0.418\n\nghlt_ht_XPK &lt;- glht(XPK_ht, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_XPK)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lme4::lmer(formula = Height ~ 1 + Region + (1 | Replication), \n    data = data_height %&gt;% filter(Source == \"XPK\"))\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)\nWest_Virginia - Maryland == 0   0.2373     0.7778   0.305    0.950\nVirginia - Maryland == 0       -1.2811     0.8754  -1.463    0.308\nVirginia - West_Virginia == 0  -1.5183     0.8959  -1.695    0.206\n(Adjusted p values reported -- single-step method)\n\n\n\n\n\nXCS_ht &lt;- glmer(Height ~ 1+ Region +  (1|Replication), data = data_height %&gt;% filter(Source == \"XCS\"))\n\nWarning in glmer(Height ~ 1 + Region + (1 | Replication), data = data_height\n%&gt;% : calling glmer() with family=gaussian (identity link) as a shortcut to\nlmer() is deprecated; please call lmer() directly\n\nsummary(XCS_ht)\n\nLinear mixed model fit by REML ['lmerMod']\nFormula: Height ~ 1 + Region + (1 | Replication)\n   Data: data_height %&gt;% filter(Source == \"XCS\")\n\nREML criterion at convergence: 1746.8\n\nScaled residuals: \n     Min       1Q   Median       3Q      Max \n-3.10643 -0.61032  0.02583  0.64347  2.60644 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n Replication (Intercept)  3.223   1.795   \n Residual                25.494   5.049   \nNumber of obs: 286, groups:  Replication, 9\n\nFixed effects:\n                    Estimate Std. Error t value\n(Intercept)           28.316      0.904  31.323\nRegionWest_Virginia   -0.626      1.348  -0.464\n\nCorrelation of Fixed Effects:\n            (Intr)\nRgnWst_Vrgn -0.671\n\nghlt_ht_XCS &lt;- glht(XCS_ht, linfct = mcp(Region = \"Tukey\"),test=adjusted(\"holm\"))\nsummary(ghlt_ht_XCS)\n\n\n     Simultaneous Tests for General Linear Hypotheses\n\nMultiple Comparisons of Means: Tukey Contrasts\n\n\nFit: lme4::lmer(formula = Height ~ 1 + Region + (1 | Replication), \n    data = data_height %&gt;% filter(Source == \"XCS\"))\n\nLinear Hypotheses:\n                              Estimate Std. Error z value Pr(&gt;|z|)\nWest_Virginia - Maryland == 0   -0.626      1.348  -0.464    0.642\n(Adjusted p values reported -- single-step method)"
  },
  {
    "objectID": "evolvability.html#data",
    "href": "evolvability.html#data",
    "title": "5  Evolutionary potential of seed sources",
    "section": "5.1 Data",
    "text": "5.1 Data\n\n# packages\nrequire(lmerTest)\nrequire(tidyverse)\n\n\ndata &lt;- read.csv(\"./data/tnc_spring_2022.csv\", header=TRUE)\nplot_cor &lt;- read.csv(\"./data/plot_coordinates.csv\", header=TRUE)\n\n# add coordinates \ndata &lt;- merge(data,plot_cor[,c(\"Replication\",\"POINT_X\",\"POINT_Y\")])\n\n\n5.1.1 Calculations\n\nphenotypic variance (Vp) = variance of phenotypic trait observed\n\nVp = var(model residuals x model intercept)\n\nAdditive genetic variance (Va) = heritability of the trait x phenotypic variance (Vp)\n\nVa = H2 x Vp\n\nPhenotypic variance (\\(V_{P}\\)) = variance of phenotypic trait observed\n\n\\(V_{P}\\) = var(model residuals x model intercept)\n\nAdditive genetic variance (Va) = heritability of the trait x phenotypic variance (Vp)\n\\[V_{A} = h^{2}.{V_{P}}\\] Where,\n\\(V_{A}\\) is additie genetic variance,\n\\(h^{2}\\) is narrow sense heritability,\n\\(V_{P}\\) is phenotypic variance\nCoefficent of Evolvability (\\(CV_{A}\\)) = the evolutionary potential of a trait to evolve\n\\[CV_{A} = \\frac{\\sqrt{V_{A}}}{\\overline{X}}\\]\nWhere,\n\\(e_{\\mu}\\) is evolvability,\n\\(V_{A}\\) is additie genetic variance,\n\\(\\overline{X}\\) is phenotypic mean\n\nWe however use broad sense heritability (\\(H^{2} = V_{G}/V_{P}\\)) in our calculation, thus we take \\(V_{G}\\) for calculating evolvability instead of \\(V_{A}\\).\n\\[CV_{G} = \\frac{\\sqrt{V_{G}}}{\\overline{X}}\\]"
  },
  {
    "objectID": "evolvability.html#heritability",
    "href": "evolvability.html#heritability",
    "title": "5  Evolutionary potential of seed sources",
    "section": "5.2 Heritability",
    "text": "5.2 Heritability\n\n5.2.1 MCMCglmm model\n\n## note\n  # gw - growth\n  # B - lmer family blups (means)\nrequire(lmerTest)\nrequire(dplyr)\nrequire(tidyr)\nrequire(MCMCglmm)\n\n\n# set priors \nPrior &lt;- list(R=list(V=1, nu=0.002),           # R - prior on residual variance  \n              G=list(G1=list(V=1, nu=0.002),   # G prior for random variance # G1 = for first random effect, here its Source\n                     G2=list(V=1, nu=0.002)))  # G2 = for second random effect, here its Replication\n\n\n# Common garden data \n# height\ngrowth_2020 &lt;- read.csv(\"./data/MCMCglmm/Growth_2020.csv\", stringsAsFactors = T)\ngrowth_2020$mBed &lt;- paste0(growth_2020$Garden,\"_\",growth_2020$Bed)\n\n# Meta data\nMeta &lt;- read.table(\"./data/RS_Exome_metadata.txt\", sep=\"\\t\",header=T)\n# remove family YRB_01\nMeta &lt;- Meta[Meta$Family!=\"YRB_01\",]\n\nmeta &lt;- as.data.frame(Meta$Family);colnames(meta)[1] &lt;- \"Family\"\nnrow(meta)\n\n[1] 339\n\n# height 2019\ngrowth_edge &lt;- growth_2020 %&gt;% filter(Region==\"Edge\")\nlength(unique(growth_edge$Family)) # no. of familes considered\n\n[1] 110\n\nlength(unique(growth_edge$Population)) # no. of populations considered\n\n[1] 23\n\n# per garden site\n# MD\ngrowth_edge_MD &lt;- growth_2020 %&gt;% filter(Garden==\"Maryland\")\ncolnames(growth_edge_MD)[19] &lt;- \"Height\"\n\n\n# One year height growth \nOneYear_height_mod_edge_MD &lt;-  MCMCglmm(Height ~ 1,\n                                random= ~ Family + Population,\n                                family=\"gaussian\",\n                                data=growth_edge_MD,\n                                prior=Prior, pr=TRUE, burnin=10000 , nitt=100000000 , thin=1000)\n\n# saveRDS(OneYear_height_mod_edge_MD,\"/home/Anoob/mydata/Anoob/TNC/OUTPUT/MCMCglmm/OneYear_height_mod_edge_MD_2019\")\n\n\n\n5.2.2 Estimate heritability based on MCMCglmm output\n\n## A) One year height\n# One year height \nOneYear_height_mod_edge_MD &lt;- readRDS(\"./OUTPUT/MCMCglmm/OneYear_height_mod_edge_MD_2019\")\n# heritability \nOneYear_height_mod_edge_MD_H2 &lt;- (2*(OneYear_height_mod_edge_MD$VCV[,\"Family\"]) + OneYear_height_mod_edge_MD$VCV[,\"Population\"])/rowSums(OneYear_height_mod_edge_MD[[\"VCV\"]])\n\nposterior.mode(OneYear_height_mod_edge_MD_H2)"
  },
  {
    "objectID": "evolvability.html#part-i-bootstrapping-cv_g",
    "href": "evolvability.html#part-i-bootstrapping-cv_g",
    "title": "5  Evolutionary potential of seed sources",
    "section": "5.3 Part I: Bootstrapping \\(CV_{G}\\)",
    "text": "5.3 Part I: Bootstrapping \\(CV_{G}\\)\n\n\n\n\n\n\nbootstrap the \\(CV_{G}\\) for the pooled data\n\n\n\n\n# function to bootstrap the CVg estiamtes per region\nEvol_boot &lt;- function(data,n,model_test,maxiter,H2_val){\n\n          for (i in 1:maxiter) {\n          #Creating a resampled dataset from the sample data\n          subset_data = data[sample(1:nrow(data), size=n, replace = TRUE),]\n          \n          #Running the regression on these data\n          model &lt;- lmer(model_test, data = subset_data)\n          \n          # pooled\n          subset_data$pooledVp &lt;- predict(model)\n          \n          # model predictions\n                VP_temp_tot &lt;- subset_data\n                VP_temp_tot &lt;- VP_temp_tot$pooledVp\n          \n          # remove outliers\n                quartiles &lt;- quantile(VP_temp_tot, probs=c(.25, .75), na.rm = FALSE)\n                IQR &lt;- IQR(VP_temp_tot)\n                 \n                Lower &lt;- quartiles[1] - 1.5*IQR\n                Upper &lt;- quartiles[2] + 1.5*IQR \n                \n                # outliers removed\n                VP_temp_tot &lt;- subset(VP_temp_tot, VP_temp_tot &gt; Lower & VP_temp_tot &lt; Upper) \n          \n          # pooled results\n          final_df &lt;- data.frame(Run=i,\n                                  Source = \"Pooled\",\n                                  Vp = var(VP_temp_tot),\n                                  mean = mean(VP_temp_tot),\n                                  H2 = H2_val,\n                                  Va = var(VP_temp_tot)*H2_val,\n                                  CVa = sqrt(var(VP_temp_tot)*H2_val)/mean(VP_temp_tot))   \n          \n          # Append to dataframe           \n          output &lt;- rbind(output, final_df) \n}\n  return(output)\n}\n\n\n\n\n# input vals\nH2_val &lt;- 0.396 # heritability for height\nmodel_test &lt;- Height ~ 1 + Source + (1|Replication)      \noutput &lt;- NULL\n\n\nMD_dat &lt;- data %&gt;% filter(Region==\"Maryland\")\nWV_dat &lt;- data %&gt;% filter(Region==\"West_Virginia\")\nVA_dat &lt;- data %&gt;% filter(Region==\"Virginia\")\n\n# boot strap the CVg for the regions\nset.seed(123) # set seed\n\n\nMD_boot_CVG &lt;- Evol_boot(data=MD_dat,model_test=model_test,\n                         n=200,maxiter=1000,H2_val=H2_val)\nWV_boot_CVG &lt;- Evol_boot(data=WV_dat,model_test=model_test,\n                         n=200,maxiter=1000,H2_val=H2_val)\nVA_boot_CVG &lt;- Evol_boot(data=VA_dat,model_test=model_test,\n                         n=200,maxiter=1000,H2_val=H2_val)"
  },
  {
    "objectID": "evolvability.html#part-ii-data-curation",
    "href": "evolvability.html#part-ii-data-curation",
    "title": "5  Evolutionary potential of seed sources",
    "section": "5.4 Part II: Data curation",
    "text": "5.4 Part II: Data curation\nGenetic diversity and Genetic load\n\nGDGL_list &lt;- readRDS(\"./data/Genetic_diversity_and_Genetic_load/GDGL_list\")\nMD_GDGL &lt;- GDGL_list$Maryland_GDGL\nWV_GDGL &lt;- GDGL_list$West_Virginia_GDGL\nVA_GDGL &lt;- GDGL_list$Virginia_GDGL\n\nMD_GDGL &lt;- MD_GDGL[-1,]\nWV_GDGL &lt;- WV_GDGL[-1,]\nVA_GDGL &lt;- VA_GDGL[-1,]\n\nGD:GL per source\n\nmd_gdgl &lt;- read.csv(\"./data/Genetic_diversity_and_Genetic_load/maryland_GDGL_per_source.csv\");md_gdgl &lt;- md_gdgl[-1,];colnames(md_gdgl)[1] &lt;- \"Source\"\nwv_gdgl &lt;- read.csv(\"./data/Genetic_diversity_and_Genetic_load/west_virginia_GDGL_per_source.csv\");wv_gdgl &lt;- wv_gdgl[-1,];colnames(wv_gdgl)[1] &lt;- \"Source\"\nva_gdgl &lt;- read.csv(\"./data/Genetic_diversity_and_Genetic_load/virginia_GDGL_per_source.csv\");va_gdgl &lt;- va_gdgl[-1,];colnames(va_gdgl)[1] &lt;- \"Source\"\n\n\nMarylandWest VirginiaVirginia\n\n\n\n# Mean CVg\nCVg_pop_MD &lt;- MD_boot_CVG %&gt;%\n  mutate(mean_CVg = mean(CVa)) %&gt;%\n  mutate(SD = sd(CVa)) %&gt;% \n  ungroup() \n\nCVg_pop_MD$Region &lt;- \"Maryland\"\nCVg_pop_MD$Source &lt;- \"Pooled\"\nCVg_pop_MD$Vp &lt;- NA\nCVg_pop_MD$mean &lt;- NA\nCVg_pop_MD$H2 &lt;- NA\nCVg_pop_MD$Va &lt;- NA \nCVg_pop_MD &lt;- unique(CVg_pop_MD[,c(\"Region\",\"Source\",\"Vp\",\"mean\",\"H2\", \"Va\",\"mean_CVg\",\"SD\")])\n\n\n\n\n# Mean CVg\nCVg_pop_WV &lt;- WV_boot_CVG %&gt;%\n  mutate(mean_CVg = mean(CVa)) %&gt;%\n  mutate(SD = sd(CVa)) %&gt;% \n  ungroup() \n\nCVg_pop_WV$Region &lt;- \"West_Virginia\"\nCVg_pop_WV$Source &lt;- \"Pooled\"\nCVg_pop_WV$Vp &lt;- NA\nCVg_pop_WV$mean &lt;- NA\nCVg_pop_WV$H2 &lt;- NA\nCVg_pop_WV$Va &lt;- NA \nCVg_pop_WV &lt;- unique(CVg_pop_WV[,c(\"Region\",\"Source\",\"Vp\",\"mean\",\"H2\", \"Va\",\"mean_CVg\",\"SD\")])\n\n\n\n\n# Mean CVg\nCVg_pop_VA &lt;- VA_boot_CVG %&gt;%\n  mutate(mean_CVg = mean(CVa)) %&gt;%\n  mutate(SD = sd(CVa)) %&gt;% \n  ungroup() \n\nCVg_pop_VA$Region &lt;- \"Virginia\"\nCVg_pop_VA$Source &lt;- \"Pooled\"\nCVg_pop_VA$Vp &lt;- NA\nCVg_pop_VA$mean &lt;- NA\nCVg_pop_VA$H2 &lt;- NA\nCVg_pop_VA$Va &lt;- NA \nCVg_pop_VA &lt;- unique(CVg_pop_VA[,c(\"Region\",\"Source\",\"Vp\",\"mean\",\"H2\", \"Va\",\"mean_CVg\",\"SD\")])\n\nCVg_pooled &lt;- rbind(CVg_pop_MD,CVg_pop_WV,CVg_pop_VA)\ncolnames(CVg_pooled)[7] &lt;- \"CVg\"\n\nCVg_table &lt;- read.csv(\"./data/CVa_TNC_H2\")\nCVg_table &lt;- CVg_table[CVg_table$Source!=\"Pooled\",]\ncolnames(CVg_table)[7] &lt;- \"CVg\"\nCVg_table$SD &lt;- NA\n\nCVg_comb &lt;- rbind(CVg_table,CVg_pooled)\n\n\n\n\n\n# merge data\nCVg_pop_MD &lt;- merge(CVg_comb %&gt;% filter(Region==\"Maryland\"),md_gdgl,all.x=T)\nCVg_pop_MD[CVg_pop_MD$Source==\"Pooled\",9] &lt;- round(MD_GDGL[\"XCS_XDS_XPK\",]$Hexp,5)\nCVg_pop_MD[CVg_pop_MD$Source==\"Pooled\",10] &lt;- round(MD_GDGL[\"XCS_XDS_XPK\",]$GenLoad,5)\nCVg_pop_MD$GDGL &lt;- CVg_pop_MD$Hexp/CVg_pop_MD$GenLoad\n\n\nCVg_pop_WV &lt;- merge(CVg_comb %&gt;% filter(Region==\"West_Virginia\"),wv_gdgl,all.x=T)\nCVg_pop_WV[CVg_pop_WV$Source==\"Pooled\",9] &lt;- round(WV_GDGL[\"XCS_XDS_XPK_XSK\",]$Hexp,5)\nCVg_pop_WV[CVg_pop_WV$Source==\"Pooled\",10] &lt;- round(WV_GDGL[\"XCS_XDS_XPK_XSK\",]$GenLoad,5)\nCVg_pop_WV$GDGL &lt;- CVg_pop_WV$Hexp/CVg_pop_WV$GenLoad\n\nCVg_pop_VA &lt;- merge(CVg_comb %&gt;% filter(Region==\"Virginia\"),va_gdgl,all.x=T)\nCVg_pop_VA[CVg_pop_VA$Source==\"Pooled\",9] &lt;- round(VA_GDGL[\"BFA_KOS_XDS_XPK\",]$Hexp,5)\nCVg_pop_VA[CVg_pop_VA$Source==\"Pooled\",10] &lt;- round(VA_GDGL[\"BFA_KOS_XDS_XPK\",]$GenLoad,5)\nCVg_pop_VA$GDGL &lt;- CVg_pop_VA$Hexp/CVg_pop_VA$GenLoad\n\nCVg_gdgl &lt;- rbind(CVg_pop_MD,CVg_pop_WV,CVg_pop_VA)\nCVg_gdgl &lt;- CVg_gdgl %&gt;% mutate(across(where(is.numeric), ~round(., 3)))\n\n\nCVg_gdgl$Region &lt;- as.factor(CVg_gdgl$Region)\nCVg_gdgl$Source &lt;- as.factor(CVg_gdgl$Source)\n\nCVg_gdgl$Region &lt;- factor(CVg_gdgl$Region, levels = c(\"Maryland\",\"West_Virginia\",\"Virginia\"))\n\nCVg_gdgl$Source &lt;- factor(CVg_gdgl$Source, levels = c(\"BFA\",\"KOS\",\"XCS\",\"XDS\",\"XPK\",\"XSK\",\"Pooled\"))\n\nDT::datatable(CVg_gdgl, rownames = T, options = list(pageLength = 14, dom = 'tip'),\n          filter = 'top')"
  },
  {
    "objectID": "evolvability.html#part-iii-visualization",
    "href": "evolvability.html#part-iii-visualization",
    "title": "5  Evolutionary potential of seed sources",
    "section": "5.5 Part III: Visualization",
    "text": "5.5 Part III: Visualization\n\n# dim 800w 780h jpg 7.8h 8.0w pdf\nCVg_gdgl_plot &lt;- ggplot(CVg_gdgl, aes(x= GDGL, y = CVg, label = Source)) + \n                geom_point(aes(color = Source, \n                           size = 4, alpha = 0.8)) +\n                scale_color_manual(values = c(\"#FFD92F\",\"#FC8D59\",\"#D73027\",\"#1B9E77\",\"#1F78B4\",\"#E78AC3\",\"black\"))+\n                \n                geom_errorbar(aes(ymin=CVg-SD,ymax=CVg+SD, color=Source)) + \n                                              # theme\n                                              ylab(bquote(Evolvability~(CV[G]))) + \n                                              xlab(\"Genetic diversity:Genetic load\") + \n                                              theme_bw(base_size = 11, base_family = \"Times\") +\n                                              theme(axis.text=element_text(size=14), \n                                                    axis.title=element_text(size=18),\n                                                    panel.background = element_blank(), \n                                                    legend.background = element_blank(), \n                                                    panel.grid = element_blank(), \n                                                    plot.background = element_blank(),\n                                                    legend.title = element_text(size=15),\n                                                    legend.text=element_text(size=15), \n                                                    strip.text = element_text(size=30))\nCVg_gdgl_plot + guides(alpha = \"none\", size = \"none\") + facet_grid(Region~.)"
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Bucharova, Anna, Oliver Bossdorf, Norbert Hölzel, Johannes Kollmann,\nRüdiger Prasse, and Walter Durka. 2019. “Mix and Match: Regional\nAdmixture Provenancing Strikes a Balance Among Different Seed-Sourcing\nStrategies for Ecological Restoration.” Conservation\nGenetics 20 (1): 7–17. https://doi.org/10.1007/s10592-018-1067-6.\n\n\nCapblancq, Thibaut, John R. Butnor, Sonia Deyoung, Ethan Thibault,\nHelena Munson, David M. Nelson, Matthew C. Fitzpatrick, and Stephen R.\nKeller. 2020. “Whole-Exome Sequencing Reveals a Long-Term Decline\nin Effective Population Size of Red Spruce (Picea\nRubens).” Evolutionary Applications 13 (9): 2190–2205.\nhttps://doi.org/10.1111/eva.12985.\n\n\nCapblancq, Thibaut, Helena Munson, John R. Butnor, and Stephen R.\nKeller. 2021. “Genomic Drivers of Early-Life Fitness in\nPicea Rubens.” Conservation Genetics 22\n(6): 963–76. https://doi.org/10.1007/s10592-021-01378-7.\n\n\nCingolani, Pablo, Adrian Platts, Le Lily Wang, Melissa Coon, Tung\nNguyen, Luan Wang, Susan J. Land, Xiangyi Lu, and Douglas M. Ruden.\n2012. “A Program for Annotating and Predicting the Effects of\nSingle Nucleotide Polymorphisms, SnpEff: SNPs\nin the Genome of Drosophila Melanogaster Strain w\n1118 ; Iso-2; Iso-3.” Fly 6 (2):\n80–92. https://doi.org/10.4161/fly.19695."
  }
]